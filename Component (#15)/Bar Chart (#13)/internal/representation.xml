<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
    <entry key="jsNamespace" type="xstring" value="knimeGroupedBarChart"/>
    <config key="jsCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="/* global d3:false, kt:false, nv:false */%%00010window.knimeGroupedBarChart = (function () {%%00010%%00010    var barChart = {};%%00010    var MIN_HEIGHT = 100;%%00010    var MIN_WIDTH = 100;%%00010    var layoutContainer,%%00010        _representation,%%00010        _value,%%00010        chart,%%00010        svg,%%00010        knimeTable,%%00010        plotData,%%00010        wrappedPlotData,%%00010        colorRange,%%00010        categories,%%00010        freqCols,%%00010        _translator,%%00010        _keyNameMap,%%00010        _incomingTable,%%00010%%00010        /**%%00010         * 2d-array where for each category (indexing follows categories array) we%%00010         * store an array of those frequency columns, which have a missing value in%%00010         * the current category. This allows to exclude specific bars or even the%%00010         * whole category. Storing by category helps to group warnings also by%%00010         * category. Required for missing values handling.%%00010         */%%00010        missValInCat,%%00010%%00010        /**%%00010         * Array where for each frequency column, which has in all other categories%%00010         * only missing values, we store whether it has a value in the Missing%%00010         * values category. This allows to decide, if we should keep this freq%%00010         * column (if it has a value in MissValCat and the option &quot;include%%00010         * MissValCat&quot; is on) or exclude it. Each item has the fields: col - name of%%00010         * freq column hasValueOnMissValCat - whether the column has a non-missing%%00010         * value in the Missing values category (true/false) Required for missing%%00010         * values handling.%%00010         */%%00010        freqColValueOnMissValCat,%%00010%%00010        /**%%00010         * Array where for each frequency column, which has non-missing value in the%%00010         * Missing values category, we store this value. We need to store it%%00010         * separately to quickly add/remove them to the plot data, when the option%%00010         * &quot;include MissValCat&quot; is getting switched. Each item has the fields: col -%%00010         * name of freq column value - non-missing value, this freq column has in%%00010         * the Missing values category Required for missing values handling.%%00010         */%%00010        missValCatValues,%%00010%%00010        /**%%00010         * Boolean flag - is the Missing values category present in the dataset.%%00010         * Required for missing values handling.%%00010         */%%00010        isMissValCat,%%00010%%00010        /**%%00010         * Map where keys - frequency column names, values - array of those%%00010         * categories for which the bar, specified by the corresponding freq column%%00010         * and the category, was excluded from the view. There excluded bars%%00010         * actually specify those dummy null values, we have to add to the stacked%%00010         * chart to fix it. Choosing freq cols as keys helps adding dummy nulls%%00010         * since the plot dataset has to be key-&gt;values. Required for missing values%%00010         * handling.%%00010         */%%00010        excludeFreqColCatMap,%%00010        showWarnings,%%00010%%00010        /**%%00010         * Function declarations%%00010         */%%00010        drawChart, drawControls, fixStackedData, createHilightBar, removeHilightBar, getClusterToRowMapping,%%00010        subscribeToSelection, publishSelection, processData, getRoundedMaxValue, getSelectedRowIDs,%%00010        handleHighlightClick, sortByClusterName, setCssClasses, setTooltipCssClasses, updateTitles, updateAxisLabels,%%00010        updateLabels, updateChartType, redrawSelection, onSelectionChanged, registerClickHandler, getActiveBars,%%00010        checkClearSelectionButton, selectCorrectBar, processMissingValues, checkMaxSizeXAxis, KeyNameMap,%%00010        handleWarnings, handleMissingValues, getStackedMaxValue, createStaticBarValues, removeStaticBarValues, hasSufficientBackgroundContrast;%%00010%%00010    var MISSING_VALUES_LABEL = 'Missing values';%%00010    var MISSING_VALUES_ONLY = 'missingValuesOnly';%%00010    var FREQ_COLUMN_MISSING_VALUES_ONLY = 'freqColumnMissingValuesOnly';%%00010    var CATEGORY_MISSING_VALUES_ONLY = 'categoryMissingValuesOnly';%%00010    var NO_DATA_AVAILABLE = 'noDataAvailable';%%00010    var NO_STATIC_BAR_VALUES = 'noStaticBarValues';%%00010%%00010    barChart.init = function (representation, value) {%%00010        _value = value;%%00010        _representation = representation;%%00010        _incomingTable = _representation.inObjects[0].table;%%00010%%00010        if (_representation.options.enableSelection &amp;&amp; _representation.inObjects[0].translator) {%%00010            _translator = _representation.inObjects[0].translator;%%00010            _translator.sourceID = _representation.inObjects[0].uuid;%%00010            _translator.targetIDs = [_representation.tableIds[0]];%%00010            knimeService.registerSelectionTranslator(_translator, _translator.sourceID);%%00010            subscribeToSelection(_value.options.subscribeToSelection);%%00010        }%%00010%%00010        showWarnings = _representation.options.showWarnings;%%00010%%00010        if (_representation.warnMessage &amp;&amp; showWarnings) {%%00010            knimeService.setWarningMessage(_representation.warnMessage);%%00010        }%%00010        if (_representation.options.enableViewControls) {%%00010            drawControls();%%00010        }%%00010        drawChart();%%00010%%00010        _keyNameMap = new KeyNameMap(getClusterToRowMapping());%%00010    };%%00010%%00010%%00010    drawChart = function (redraw) {%%00010%%00010        d3.select('html').style('width', '100%').style('height', '100%');%%00010        d3.select('body').style('width', '100%').style('height', '100%');%%00010%%00010        // Process options%%00010        var optWidth = _representation.options.svg.width;%%00010        var optHeight = _representation.options.svg.height;%%00010%%00010        var optTitle = _value.options.title;%%00010        var optSubtitle = _value.options.subtitle;%%00010%%00010        var sortLabels = _representation.options.sort;%%00010        var optLegend = _representation.options.legend;%%00010        var optTooltips = _representation.options.tooltip;%%00010%%00010        var optOrientation = _value.options.orientation;%%00010%%00010        var optFullscreen = _representation.options.svg.fullscreen &amp;&amp; _representation.runningInView;%%00010        var optEnableSelection = _representation.options.enableSelection;%%00010%%00010        var isTitle = optTitle || optSubtitle;%%00010%%00010        var body = d3.select('body');%%00010%%00010        var width = optWidth + 'px';%%00010        var height = optHeight + 'px';%%00010        if (optFullscreen) {%%00010            knimeService.floatingHeader(isTitle);%%00010            width = '100%';%%00010            height = isTitle ? '100%' : 'calc(100% - ' + knimeService.headerHeight() + 'px)';%%00010        }%%00010%%00010        var div;%%00010        if (redraw) {%%00010            d3.select('svg').remove();%%00010            div = d3.select('#svgContainer');%%00010        } else {%%00010            layoutContainer = body.append('div')%%00010                .attr('id', 'layoutContainer')%%00010                .attr('class', 'knime-layout-container')%%00010                .style('width', width)%%00010                .style('height', height)%%00010                .style('min-width', MIN_WIDTH + 'px')%%00010                .style('min-height', MIN_HEIGHT + 'px');%%00010%%00010            div = layoutContainer.append('div')%%00010                .attr('id', 'svgContainer')%%00010                .attr('class', 'knime-svg-container')%%00010                .style('min-width', MIN_WIDTH + 'px')%%00010                .style('min-height', MIN_HEIGHT + 'px');%%00010        }%%00010%%00010        var svg1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010        div[0][0].appendChild(svg1);%%00010%%00010        svg = d3.select('svg')%%00010            .style('display', 'block')%%00010            .classed('colored', true);%%00010%%00010%%00010        // handle clicks on background to deselect current selection%%00010        if (optEnableSelection) {%%00010            svg.on('click', function () {%%00010                removeHilightBar('', true);%%00010                _value.options.selection = [];%%00010                publishSelection(true);%%00010            });%%00010        }%%00010%%00010%%00010        if (optFullscreen) {%%00010            // Set full screen height/width%%00010            div.style('width', '100%');%%00010            div.style('height', height /* this should be 100% always, but for some reason that doesn't work */);%%00010%%00010            svg.attr('width', '100%');%%00010            svg.attr('height', '100%');%%00010        } else {%%00010            if (optWidth &gt; 0) {%%00010                div.style('width', optWidth + 'px');%%00010                svg.attr('width', optWidth);%%00010                // Looks like the below doesn't work,%%00010                // above does work...%%00010                // chart.width(optWidth);%%00010            }%%00010            if (optHeight &gt; 0) {%%00010                svg.attr('height', optHeight);%%00010                div.style('height', optHeight + 'px');%%00010                // Looks like the below doesn't work,%%00010                // above does work...%%00010                // chart.height(optHeight);%%00010            }%%00010        }%%00010%%00010        if (!redraw) {%%00010            /*%%00010             * Process data%%00010             */%%00010            knimeTable = new kt();%%00010            // Add the data from the input port to the knimeTable.%%00010            var port0dataTable = _representation.inObjects[0].table;%%00010            if (!_representation.isHistogram &amp;&amp; sortLabels) {%%00010                port0dataTable.rows = sortByClusterName(port0dataTable.rows);%%00010            }%%00010            knimeTable.setDataTable(port0dataTable);%%00010%%00010            processData();%%00010        }%%00010%%00010        /*%%00010         * Plot chart%%00010         */%%00010        nv.addGraph(function () {%%00010            if (optOrientation) {%%00010                chart = nv.models.multiBarHorizontalChart();%%00010            } else {%%00010                chart = nv.models.multiBarChart();%%00010                chart.reduceXTicks(Boolean(_representation.isHistogram));%%00010                /* if (_representation.options.rotateLabels) {%%00010                    chart.rotateLabels(_representation.options.rotateLabels);%%00010                } */%%00010            }%%00010%%00010            chart.dispatch.on('renderEnd.css', function () {%%00010                setCssClasses();%%00010                if (_value.options.showStaticBarValues) {%%00010                    removeStaticBarValues();%%00010                    createStaticBarValues();%%00010                }%%00010            });%%00010            // tooltip is re-created every time therefore we need to assign%%00010            // classes accordingly%%00010            chart.multibar.dispatch.on('elementMouseover.tooltipCss', setTooltipCssClasses);%%00010            chart.multibar.dispatch.on('elementMousemove.tooltipCss', setTooltipCssClasses);%%00010            chart.legend.dispatch.on('legendClick', function () {%%00010                drawChart(true);%%00010                d3.event.stopPropagation();%%00010            });%%00010%%00010            var stacked = _value.options.chartType === 'Stacked';%%00010            if (stacked) {%%00010                fixStackedData(true); // add dummy nulls%%00010            }%%00010            chart.stacked(stacked);%%00010%%00010            chart%%00010                .color(colorRange)%%00010                .duration(0)%%00010                .margin({ right: 20 })%%00010                .groupSpacing(_representation.isHistogram ? 0.01 : 0.1);%%00010%%00010            updateTitles(false);%%00010%%00010            chart.showControls(false); // all the controls moved to settings menu%%00010            chart.showLegend(optLegend);%%00010            chart.tooltip.enabled(typeof optTooltips === 'undefined' || optTooltips);%%00010%%00010            updateAxisLabels(false);%%00010            svg.datum(plotData).transition().duration(0).call(chart);%%00010            nv.utils.windowResize(function () {%%00010                updateAxisLabels(true);%%00010                updateLabels();%%00010                setCssClasses();%%00010                removeHilightBar('', true);%%00010                redrawSelection();%%00010            });%%00010%%00010            // redraws selection%%00010            if (_value.options.selection) {%%00010                redrawSelection();%%00010            }%%00010            return chart;%%00010        });%%00010    };%%00010%%00010    sortByClusterName = function (array) {%%00010        return array.sort(function (a, b) {%%00010            var x = a.data[0];%%00010            var y = b.data[0];%%00010%%00010            // Make sure, that missing values are displayed last%%00010            if (x === null) {%%00010                return 1;%%00010            } else if (y === null) {%%00010                return -1;%%00010            }%%00010%%00010            if (typeof x === 'string') {%%00010                x = (String(x)).toLowerCase();%%00010            }%%00010            if (typeof y === 'string') {%%00010                y = (String(y)).toLowerCase();%%00010            }%%00010            var compare = 0;%%00010            if (x &lt; y) {%%00010                compare = -1;%%00010            } else if (x &gt; y) {%%00010                compare = 1;%%00010            }%%00010            return compare;%%00010        });%%00010    };%%00010%%00010    registerClickHandler = function () {%%00010        d3.selectAll('.nv-bar').on('click', function (event) {%%00010            handleHighlightClick(event);%%00010            d3.event.stopPropagation();%%00010        });%%00010    };%%00010%%00010    getActiveBars = function () {%%00010        var stacked = _value.options.chartType;%%00010        var counter = 0;%%00010        if (stacked === 'Stacked') {%%00010            counter = 1;%%00010        } else {%%00010            for (var j = 0; j &lt; plotData.length; j++) {%%00010                if (plotData[j].disabled !== true) {%%00010                    counter++;%%00010                }%%00010            }%%00010        }%%00010        return counter;%%00010    };%%00010%%00010    redrawSelection = function () {%%00010        var length = _value.options.selection ? _value.options.selection.length : 0;%%00010        for (var i = 0; i &lt; length; i++) {%%00010            createHilightBar(_keyNameMap.getNameFromKey(_value.options.selection[i][0]),%%00010                _value.options.selection[i][1]);%%00010        }%%00010    };%%00010%%00010    subscribeToSelection = function (subscribeBool) {%%00010        if (_representation.options.enableSelection) {%%00010            if (subscribeBool) {%%00010                knimeService.subscribeToSelection(_translator.sourceID, onSelectionChanged);%%00010            } else {%%00010                knimeService.unsubscribeSelection(_translator.sourceID, onSelectionChanged);%%00010            }%%00010        }%%00010    };%%00010%%00010    publishSelection = function (shouldPublish) {%%00010        if (shouldPublish) {%%00010            knimeService.setSelectedRows(_translator.sourceID, getSelectedRowIDs(), onSelectionChanged);%%00010        }%%00010    };%%00010%%00010    checkClearSelectionButton = function () {%%00010        if (_value.options.selection) {%%00010            var button = d3.select('#clearSelectionButton');%%00010            if (button) {%%00010                button.classed('inactive', function () {%%00010                    return !_value.options.selection.length &gt; 0;%%00010                });%%00010            }%%00010        }%%00010    };%%00010%%00010    getSelectedRowIDs = function () {%%00010        if (_value.options.selection) {%%00010            var selectedRowIDs = [];%%00010            for (var i = 0; i &lt; _value.options.selection.length; i++) {%%00010                selectedRowIDs.push(_value.options.selection[i][0]);%%00010            }%%00010            return selectedRowIDs;%%00010        } else {%%00010            return [];%%00010        }%%00010    };%%00010%%00010    selectCorrectBar = function (clusterName) {%%00010        var allBars = d3.selectAll('.knime-x text.knime-tick-label');%%00010        for (var j = 0; j &lt; allBars[0].length; j++) {%%00010            if (d3.select(allBars[0][j]).data()[0] === clusterName) {%%00010                return d3.select(allBars[0][j]);%%00010            }%%00010        }%%00010        // no bar found%%00010        return null;%%00010    };%%00010%%00010    // Removes the clusterName with the given cluster name. If &quot;removeAll&quot; is true all bars are removed%%00010    removeHilightBar = function (clusterName, removeAll) {%%00010        if (_value.options.selection) {%%00010            var selectedEntry, barParent;%%00010            if (removeAll) {%%00010                var length = _value.options.selection.length;%%00010                for (var i = 0; i &lt; length; i++) {%%00010                    selectedEntry = _value.options.selection[i];%%00010                    var bars = d3.selectAll('.hilightBar');%%00010                    barParent = bars.select(function () {%%00010                        return this.parentNode;%%00010                    });%%00010                    barParent.select('text').classed(selectedEntry[1], false);%%00010                    d3.selectAll('.hilightBar').remove();%%00010                }%%00010            } else {%%00010                var barIndex = getSelectedRowIDs().indexOf(_keyNameMap.getKeyFromName(clusterName));%%00010                if (barIndex &gt; -1) {%%00010                    selectedEntry = _value.options.selection[barIndex];%%00010                    var bar = selectCorrectBar(clusterName);%%00010                    if (bar) {%%00010                        barParent = bar.select(function () {%%00010                            return this.parentNode;%%00010                        });%%00010                        barParent.select('text').classed(selectedEntry[1], false);%%00010                        barParent.selectAll('.hilightBar').remove();%%00010                    }%%00010                }%%00010            }%%00010        }%%00010    };%%00010%%00010    // Create a hilight-bar above the cluster with the given name and assigns the given css class to it%%00010    createHilightBar = function (clusterName, selectionClass) {%%00010        var optOrientation = _value.options.orientation;%%00010        var overallBarCount = -1;%%00010        for (var k = 0; k &lt; plotData.length; k++) {%%00010            for (var j = 0; j &lt; plotData[k].values.length; j++) {%%00010                overallBarCount++;%%00010                if (plotData[k].values[j].x === clusterName) {%%00010                    d3.selectAll('.knime-x text').each(function (d, i) {%%00010                        if (i === overallBarCount) {%%00010                            d3.select(this).classed(selectionClass, true);%%00010                            var selectionTitle;%%00010                            if (selectionClass === 'knime-selected') {%%00010                                selectionTitle = 'Selected';%%00010                            } else {%%00010                                selectionTitle = 'Partially selected';%%00010                            }%%00010                            var posX = 0;%%00010                            var posY = 0;%%00010                            var highlightHeight = 0;%%00010                            var highlightWidth = 5;%%00010                            var highlightBarBBox = d3.select('.nv-bar.positive').node().getBBox();%%00010                            var spaceBetweenBarAndChart = -7;%%00010                            if (optOrientation) {%%00010                                posY = -0.5 * (highlightBarBBox.height * getActiveBars());%%00010                                posX = spaceBetweenBarAndChart;%%00010                                highlightHeight = highlightBarBBox.height *%%00010                                    getActiveBars();%%00010                            } else {%%00010                                posX = -0.5 * (highlightBarBBox.width * getActiveBars());%%00010                                highlightWidth = highlightBarBBox.width * getActiveBars();%%00010                                highlightHeight = 5;%%00010                                posY = -spaceBetweenBarAndChart - highlightHeight;%%00010                            }%%00010                            d3.select(this.parentNode).append('rect').classed('hilightBar', true)%%00010                                .classed(selectionClass, true)%%00010                                .attr({ x: posX, y: posY, width: highlightWidth, height: highlightHeight })%%00010                                .style('pointer-events', 'all')%%00010                                .append('title')%%00010                                .classed('knime-tooltip', true)%%00010                                .text(selectionTitle);%%00010                        }%%00010                    });%%00010                    j = plotData[k].values.length;%%00010                    k = plotData.length - 1;%%00010                }%%00010            }%%00010        }%%00010    };%%00010%%00010    // Create static values on top of each bar%%00010    createStaticBarValues = function () {%%00010        var parentBBox = d3.select('.nv-barsWrap').node().getBBox();%%00010%%00010        d3.selectAll('.nv-bar.positive').each(function (d) {%%00010            var DEFAULT_MARGIN = 10;%%00010            var barBBox = this.getBBox();%%00010%%00010            // calculate the maxWidth with a slightly larger default margin%%00010            // in order to ensure that the label has enough space%%00010            var configObject = {%%00010                container: document.querySelector('svg'),%%00010                maxWidth: barBBox.width - 1.1 * DEFAULT_MARGIN,%%00010                minimalChars: 1%%00010            };%%00010            var labelSize = knimeService.measureAndTruncate([d.y], configObject);%%00010%%00010            var label = d3.select(this.parentNode).append('text')%%00010                .attr('class', 'knime-static-bar-value')%%00010                .attr('dominant-baseline', 'middle')%%00010                .attr('transform', d3.select(this).attr('transform'))%%00010                .attr('fill', 'black')%%00010                .attr('stroke', 'none')%%00010                .text(labelSize.values[0].truncated);%%00010%%00010            var labelBBox = label.node().getBBox();%%00010%%00010            // Position text-elements based on orientation and free space%%00010            if (_value.options.orientation) {%%00010                var y = barBBox.y + barBBox.height / 2;%%00010                var hasEnoughSpaceAboveBar = barBBox.width + labelBBox.width + DEFAULT_MARGIN &lt; parentBBox.width;%%00010                if ((labelBBox.height + DEFAULT_MARGIN &gt;= barBBox.height%%00010                    || labelBBox.width + DEFAULT_MARGIN &gt;= barBBox.width) &amp;&amp; !hasEnoughSpaceAboveBar) {%%00010                    d3.select(label).node().remove();%%00010                    knimeService.setWarningMessage('Some static bar values can not be displayed due to missing space', NO_STATIC_BAR_VALUES);%%00010                }%%00010                if (hasEnoughSpaceAboveBar &amp;&amp; _value.options.chartType === 'Grouped') {%%00010                    configObject.maxWidth = parentBBox.width - barBBox.width - DEFAULT_MARGIN;%%00010                    labelSize = knimeService.measureAndTruncate([d.y], configObject);%%00010                    label%%00010                        .attr('text-anchor', 'start')%%00010                        .attr({ x: barBBox.width + DEFAULT_MARGIN, y: y })%%00010                        .text(labelSize.values[0].truncated);%%00010                } else {%%00010                    label%%00010                        .attr('text-anchor', 'end')%%00010                        .attr({ x: barBBox.width - DEFAULT_MARGIN, y: y })%%00010                        .style('fill', hasSufficientBackgroundContrast(this.parentNode.style.fill) ? 'black' : 'white');%%00010                }%%00010            } else {%%00010                var x = barBBox.x + barBBox.width / 2;%%00010                label.attr('text-anchor', 'middle');%%00010                var hasEnoughSpaceAboveBar = barBBox.height + labelBBox.height + DEFAULT_MARGIN &lt; parentBBox.height;%%00010%%00010                if ((labelBBox.width &gt;= barBBox.width%%00010                    || labelBBox.height + DEFAULT_MARGIN &gt;= barBBox.height) &amp;&amp; !hasEnoughSpaceAboveBar) {%%00010                    d3.select(label).node().remove();%%00010                    knimeService.setWarningMessage('Some static bar values can not be displayed due to missing space', NO_STATIC_BAR_VALUES);%%00010                }%%00010                if (hasEnoughSpaceAboveBar &amp;&amp; _value.options.chartType === 'Grouped') {%%00010                    label%%00010                        .attr({ x: x, y: barBBox.y - labelBBox.height });%%00010                } else {%%00010                    label%%00010                        .attr({ x: x, y: barBBox.y + labelBBox.height })%%00010                        .style('fill', hasSufficientBackgroundContrast(this.parentNode.style.fill) ? 'black' : 'white');%%00010                }%%00010            }%%00010        });%%00010    };%%00010%%00010    removeStaticBarValues = function () {%%00010        d3.selectAll('.knime-static-bar-value').remove();%%00010        knimeService.clearWarningMessage(NO_STATIC_BAR_VALUES);%%00010    };%%00010%%00010    hasSufficientBackgroundContrast = function (color) {%%00010        return d3.hsl(color).l &gt;= 0.5;%%00010    };%%00010%%00010    getClusterToRowMapping = function () {%%00010        var map = {};%%00010        for (var i = 0; i &lt; _incomingTable.rows.length; i++) {%%00010            if (_incomingTable.rows[i].data[0]) {%%00010                map[_incomingTable.rows[i].data[0]] = _incomingTable.rows[i].rowKey;%%00010            } else {%%00010                map['Missing values'] = _incomingTable.rows[i].rowKey;%%00010            }%%00010        }%%00010        return map;%%00010    };%%00010%%00010    // Helper class to handle conversion from cluster name to row key%%00010    KeyNameMap = function (map) {%%00010        this.map = map;%%00010        this.reverseMap = {};%%00010        for (var key in map) {%%00010            var value = map[key];%%00010            this.reverseMap[value] = key;%%00010        }%%00010    };%%00010%%00010    KeyNameMap.prototype.getKeyFromName = function (name) {%%00010        return this.map[name];%%00010    };%%00010    KeyNameMap.prototype.getNameFromKey = function (key) {%%00010        return this.reverseMap[key];%%00010    };%%00010%%00010    handleHighlightClick = function (event) {%%00010        if (!_value.options.selection) {%%00010            _value.options.selection = [];%%00010        }%%00010        var clusterName = event.x;%%00010        var clusterKey = _keyNameMap.getKeyFromName(clusterName);%%00010        var barIndex = getSelectedRowIDs().indexOf(clusterKey);%%00010        // Deselect already selected bar when clicking again on it%%00010        if (barIndex &gt; -1 &amp;&amp; (d3.event.ctrlKey || d3.event.shiftKey || d3.event.metaKey)) {%%00010            if (_representation.options.enableSelection) {%%00010                if (_value.options.publishSelection) {%%00010                    knimeService.removeRowsFromSelection(_translator.sourceID, [clusterKey], _translator.sourceID);%%00010                }%%00010            }%%00010            removeHilightBar(clusterName, false);%%00010            _value.options.selection.splice(barIndex, 1);%%00010        } else if (!d3.event.ctrlKey &amp;&amp; !d3.event.shiftKey &amp;&amp; !d3.event.metaKey) {%%00010            // Deselect all previously selected bars and select the newly clicked one%%00010            if (_representation.options.enableSelection) {%%00010                if (_value.options.publishSelection) {%%00010                    knimeService.setSelectedRows(_translator.sourceID, [clusterKey], _translator.sourceID);%%00010                }%%00010            }%%00010            removeHilightBar(clusterName, true);%%00010            createHilightBar(clusterName, 'knime-selected');%%00010            _value.options.selection = [];%%00010            _value.options.selection.push([clusterKey, 'knime-selected']);%%00010        } else {%%00010            // Select the clicked bar, as it is either a new selection or a additional selection%%00010            if (_representation.options.enableSelection) {%%00010                if (_value.options.publishSelection) {%%00010                    knimeService.addRowsToSelection(_translator.sourceID, [clusterKey], _translator.sourceID);%%00010                }%%00010            }%%00010            createHilightBar(clusterName, 'knime-selected');%%00010            _value.options.selection.push([clusterKey, 'knime-selected']);%%00010        }%%00010        checkClearSelectionButton();%%00010    };%%00010%%00010    onSelectionChanged = function (data) {%%00010        if (!_value.options.selection) {%%00010            _value.options.selection = [];%%00010        }%%00010        if (data.reevaluate) {%%00010            removeHilightBar('', true);%%00010            var selectedRows = knimeService.getAllRowsForSelection(_translator.sourceID);%%00010            var partiallySelectedRows = knimeService.getAllPartiallySelectedRows(_translator.sourceID);%%00010            var length, selectedRow, partiallySelectedRow;%%00010            for (selectedRow in selectedRows) {%%00010                length = _value.options.selection.length;%%00010                _value.options.selection[length] = [selectedRows[selectedRow], 'knime-selected'];%%00010                createHilightBar(_keyNameMap.getNameFromKey(selectedRows[selectedRow]), 'knime-selected');%%00010            }%%00010            for (partiallySelectedRow in partiallySelectedRows) {%%00010                length = _value.options.selection.length;%%00010                _value.options.selection[length] = [partiallySelectedRows[partiallySelectedRow],%%00010                    'knime-partially-selected'];%%00010                createHilightBar(_keyNameMap.getNameFromKey(partiallySelectedRows[partiallySelectedRow]),%%00010                    'knime-partially-selected');%%00010            }%%00010        } else if (data.changeSet) {%%00010            if (data.changeSet.removed) {%%00010                data.changeSet.removed.forEach(function (rowId) {%%00010                    var clusterName = rowId;%%00010                    var index = getSelectedRowIDs().indexOf(clusterName);%%00010                    if (index &gt; -1) {%%00010                        removeHilightBar(_keyNameMap.getNameFromKey(rowId), false);%%00010                        _value.options.selection.splice(index, 1);%%00010                    }%%00010                });%%00010            }%%00010            if (data.changeSet.partialRemoved) {%%00010                data.changeSet.partialRemoved.forEach(function (rowId) {%%00010                    var clusterName = rowId;%%00010                    var index = getSelectedRowIDs().indexOf(clusterName);%%00010                    if (index &gt; -1) {%%00010                        removeHilightBar(_keyNameMap.getNameFromKey(rowId), false);%%00010                        _value.options.selection.splice(index, 1);%%00010                    }%%00010                });%%00010            }%%00010            if (data.changeSet.added) {%%00010                data.changeSet.added.forEach(function (rowId) {%%00010                    var index = getSelectedRowIDs().indexOf(rowId);%%00010                    if (index === -1) {%%00010                        _value.options.selection.push([rowId, 'knime-selected']);%%00010                        createHilightBar(_keyNameMap.getNameFromKey(rowId), 'knime-selected');%%00010                    }%%00010                });%%00010            }%%00010            if (data.changeSet.partialAdded) {%%00010                data.changeSet.partialAdded.forEach(function (rowId) {%%00010                    var index = getSelectedRowIDs().indexOf(rowId);%%00010                    if (index === -1) {%%00010                        _value.options.selection.push([rowId, 'knime-partially-selected']);%%00010                        createHilightBar(_keyNameMap.getNameFromKey(rowId), 'knime-partially-selected');%%00010                    }%%00010                });%%00010            }%%00010        }%%00010        checkClearSelectionButton();%%00010    };%%00010%%00010    // eslint-disable-next-line complexity%%00010    processData = function () {%%00010        var optMethod = _representation.options.aggr;%%00010        var optFreqCol = _representation.options.freq;%%00010        var optCat = _representation.options.cat;%%00010%%00010        var customColors, colorScale;%%00010        if (_representation.inObjects[1]) {%%00010            // Custom color scale%%00010            var colorTable = new kt();%%00010            colorTable.setDataTable(_representation.inObjects[1]);%%00010            if (colorTable.getColumnTypes()[0] === 'string') {%%00010                customColors = {};%%00010                var colorCol = colorTable.getColumn(0);%%00010                for (var color = 0; color &lt; colorCol.length; color++) {%%00010                    customColors[colorCol[color]] = colorTable.getRowColors()[color];%%00010                }%%00010                colorScale = [];%%00010            }%%00010        }%%00010%%00010        categories = knimeTable.getColumn(optCat);%%00010        var numCat = categories.length;%%00010%%00010        if (optMethod === 'Occurence\u00A0Count') {%%00010            optFreqCol = [knimeTable.getColumnNames()[1]];%%00010        }%%00010%%00010        // Get the frequency columns%%00010        var valCols = [];%%00010        freqCols = [];%%00010%%00010        for (var k = 0; k &lt; optFreqCol.length; k++) {%%00010            var valCol = knimeTable.getColumn(optFreqCol[k]);%%00010            valCols.push(valCol);%%00010            freqCols.push(optFreqCol[k]);%%00010        }%%00010%%00010        plotData = [];%%00010        freqColValueOnMissValCat = [];%%00010        missValInCat = new Array(numCat);%%00010        for (var category = 0; category &lt; numCat; category++) {%%00010            missValInCat[category] = [];%%00010        }%%00010        isMissValCat = false;%%00010        missValCatValues = [];%%00010        var numFreqColsNoMissVal = 0; // number of freq columns which have non-missing values (needed for color scale)%%00010        if (valCols.length &gt; 0) {%%00010            var numDataPoints = valCols[0].length;%%00010            for (var j = 0; j &lt; freqCols.length; j++) {%%00010%%00010                var col = freqCols[j];%%00010                if (optMethod === 'Occurence\u00A0Count' &amp;&amp; !_representation.isHistogram) {%%00010                    col = 'Occurrence Count';%%00010                }%%00010                var values = [];%%00010                var onlyMissValInCats = true; // whether the freq col has only%%00010                // missing values in%%00010                // non-&quot;Missing values&quot;%%00010                // categories%%00010                var hasValueOnMissValCat = false; // whether the freq col has%%00010                // a non-missing value in%%00010                // the Missing values%%00010                // category%%00010%%00010                for (var i = 0; i &lt; numDataPoints; i++) {%%00010                    if (typeof categories !== 'undefined') {%%00010                        var cat = categories[i];%%00010                        var val = valCols[j][i];%%00010%%00010                        if (cat === null) {%%00010                            // Missing values category%%00010                            isMissValCat = true;%%00010                            if (val !== null) {%%00010                                // save the non-missing value for the%%00010                                // corresponding freq col%%00010                                missValCatValues.push({%%00010                                    col: col,%%00010                                    value: val%%00010                                });%%00010                                // this freq col has non-missing value in the%%00010                                // Missing value category%%00010                                hasValueOnMissValCat = true;%%00010                            }%%00010                        } else if (val !== null) {%%00010                            // if both cat and value are not null - normal%%00010                            // case, just add the value%%00010                            onlyMissValInCats = false;%%00010                            values.push({%%00010                                x: cat,%%00010                                y: val%%00010                            });%%00010                        }%%00010%%00010                        if (val === null) {%%00010                            // this freq col has a missing value in the current%%00010                            // category - save this info%%00010                            missValInCat[i].push(col);%%00010                        }%%00010                    }%%00010                }%%00010%%00010                if (onlyMissValInCats) {%%00010                    // The freq col has only missing values in normal categories%%00010                    // -%%00010                    // we save whether it has a non-missing value in the Missing%%00010                    // values category.%%00010                    // Whether this column is going to be displayed in the view%%00010                    // depends on the &quot;includeMissValCat&quot; option.%%00010                    // So we don't add the column to the plot at this moment -%%00010                    // wait for processMissingValues()%%00010                    // Note: a non-missing value (if there is) is stored in%%00010                    // missValCatValues - hence, enough to store only a boolean%%00010                    // flag%%00010                    freqColValueOnMissValCat.push({%%00010                        col: col,%%00010                        hasValueOnMissValCat: hasValueOnMissValCat%%00010                    });%%00010                    if (hasValueOnMissValCat) {%%00010                        // If there is a non-missing value, then the presence of%%00010                        // the column depends on the &quot;includeMissValCat&quot; option,%%00010                        // which can be switched in the view on the fly.%%00010                        // We do not want this switch to influence on the color%%00010                        // scale, so we count it%%00010                        numFreqColsNoMissVal++;%%00010                    }%%00010                } else {%%00010                    // the freq col has non-missing values in normal categories%%00010                    // - add this column to the view%%00010                    var plotStream = {%%00010                        key: col,%%00010                        values: values%%00010                    };%%00010                    plotData.push(plotStream);%%00010%%00010                    if (customColors) {%%00010                        var customColor = customColors[col];%%00010                        if (!customColor) {%%00010                            customColor = '#7C7C7C';%%00010                        }%%00010                        colorScale.push(customColor);%%00010                    }%%00010                    numFreqColsNoMissVal++;%%00010                }%%00010            }%%00010        } else {%%00010            knimeService.setWarningMessage('No numeric values detected');%%00010            return;%%00010        }%%00010%%00010        if (customColors) {%%00010            colorRange = colorScale;%%00010        } else {%%00010            // Default color scale%%00010            if (numFreqColsNoMissVal &gt; 10) {%%00010                colorScale = d3.scale.category20();%%00010            } else {%%00010                colorScale = d3.scale.category10();%%00010            }%%00010            colorRange = colorScale.range();%%00010        }%%00010%%00010        processMissingValues();%%00010    };%%00010%%00010    /**%%00010     * @param {bool} switched - if the chart update was triggered by changing the &quot;include 'Missing values' category&quot;%%00010     * option in the view%%00010     * @returns {undefined}%%00010     */%%00010    processMissingValues = function (switched) {%%00010        // Make a list of freq columns to exclude%%00010        var excludeCols = []; // column names to exclude%%00010        // Go through the list of those freq cols which have only missing values%%00010        // in normal categories%%00010        // and exclude those which either 1) has a missing value in the Missing%%00010        // values category, or%%00010        // 2) has a non-missing value there but the option is set to Don't%%00010        // include missing values%%00010        for (var colI = 0; colI &lt; freqColValueOnMissValCat.length; colI++) {%%00010            var col = freqColValueOnMissValCat[colI];%%00010            if (!col.hasValueOnMissValCat || col.hasValueOnMissValCat &amp;&amp; !_value.options.includeMissValCat) {%%00010                excludeCols.push(col.col);%%00010            }%%00010        }%%00010%%00010        // Make a list of excluded bars per category or whole categories%%00010        var excludeBars = []; // bars (in string representation) to exclude%%00010        var excludeCats = []; // category names to exclude%%00010        var numLeftCols = freqCols.length - excludeCols.length; // how many%%00010        // columns left%%00010        // after%%00010        // excluded ones%%00010        var missValCatBars, // bars for Missing values category we add to the%%00010            data, dataInd;%%00010        // end, so we store them separately%%00010        var excludeWholeMissValCat = false;%%00010        excludeFreqColCatMap = {};%%00010        // We group the warnings by category, so we iterate over categories%%00010        for (var catI = 0; catI &lt; missValInCat.length; catI++) {%%00010            var cat = categories[catI];%%00010            // take only those freq cols which have missing values in the%%00010            // current category and were not whole excluded%%00010            var cols = missValInCat[catI].filter(function (x) {%%00010                return excludeCols.indexOf(x) === -1;%%00010            });%%00010            if (cols.length &gt; 0) {%%00010                if (cols.length === numLeftCols) {%%00010                    // if all the left freq cols have missing values - exclude%%00010                    // the whole category%%00010                    if (cat === null) {%%00010                        excludeWholeMissValCat = true; // Missing values category will be appended to the end%%00010                    } else {%%00010                        excludeCats.push(cat);%%00010                    }%%00010                } else {%%00010                    // build a string of excluded bars (cat - col1, col2 ...)%%00010                    var label = cat === null ? MISSING_VALUES_LABEL : cat;%%00010                    var exclStr = label + ' - ' + cols.join(', ');%%00010                    if (cat === null) {%%00010                        missValCatBars = exclStr; // Missing values category will be appended to the end%%00010                    } else {%%00010                        excludeBars.push(exclStr);%%00010                    }%%00010                    // for normal categories and also for the Missing values%%00010                    // category (if it's included in the view)%%00010                    // we fill the map of excluded bars (grouped by freq cols) -%%00010                    // needed for Stacked plot%%00010                    if (cat !== null || _value.options.includeMissValCat) {%%00010                        cols.forEach(function (col) {%%00010                            if (typeof excludeFreqColCatMap[col] === 'undefined') {%%00010                                excludeFreqColCatMap[col] = [cat];%%00010                            } else {%%00010                                excludeFreqColCatMap[col].push(cat);%%00010                            }%%00010                        });%%00010                    }%%00010                }%%00010            }%%00010        }%%00010        // exclude smth from Missing values category, if it's included in the%%00010        // view%%00010        if (_value.options.includeMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010            if (excludeWholeMissValCat) {%%00010                excludeCats.push(MISSING_VALUES_LABEL);%%00010            } else if (typeof missValCatBars !== 'undefined') {%%00010                excludeBars.push(missValCatBars);%%00010            }%%00010        }%%00010%%00010        // Add or remove the non-missing values of the Missing values category%%00010        handleMissingValues(excludeCols, switched, data, dataInd);%%00010%%00010        // Set warning messages%%00010        if (!showWarnings) {%%00010            return;%%00010        }%%00010%%00010        handleWarnings(excludeCols, excludeCats, excludeBars);%%00010    };%%00010%%00010    handleMissingValues = function (excludeCols, switched, data, dataInd) {%%00010        for (var i = 0; i &lt; missValCatValues.length; i++) {%%00010            var item = missValCatValues[i];%%00010            if (excludeCols.indexOf(item.col) !== -1 &amp;&amp; !(!_value.options.includeMissValCat &amp;&amp; switched)) {%%00010                /*%%00010                 * Fact that the freq col is in missValCatValues means it has a non-missing value in Missing values%%00010                 * category. If this col was excluded, that means it has only missing values in all other categories AND%%00010                 * we &quot;don't include MissValCat&quot;. In case it's the first time the plot is building, we don't need to do%%00010                 * anything - call continue. But if a user switched the option &quot;includeMissValCat&quot; from 'on' to 'off',%%00010                 * we need to remove the value of MissValCat from the plot further below.%%00010                 */%%00010                continue;%%00010            }%%00010            // find if the plot has already the data (key-&gt;values) for the current freq col == key%%00010            // data object needs to be reset, otherwise missing values will be added to previous data%%00010            data = null;%%00010            for (var j = 0; j &lt; plotData.length; j++) {%%00010                if (plotData[j].key === item.col) {%%00010                    data = plotData[j];%%00010                    dataInd = j;%%00010                    break;%%00010                }%%00010            }%%00010            if (_value.options.includeMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                /* if we include Missing values category to the view, we need to add its values */%%00010                var val = {%%00010                    x: MISSING_VALUES_LABEL,%%00010                    y: item.value%%00010                };%%00010                if (typeof data === 'undefined' || data === null) {%%00010                    plotData.push({%%00010                        key: item.col,%%00010                        values: [val]%%00010                    });%%00010                } else {%%00010                    data.values.push(val);%%00010                }%%00010            } else if (switched) {%%00010                // if we don't include Missing values category to the view AND%%00010                // this option was switched in the view, we need to remove its%%00010                // value%%00010                if (typeof data !== 'undefined' &amp;&amp; data !== null) {%%00010                    data.values.pop();%%00010                    if (data.values.length === 0) {%%00010                        plotData.splice(dataInd, 1);%%00010                    }%%00010                }%%00010            }%%00010        }%%00010    };%%00010%%00010    handleWarnings = function (excludeCols, excludeCats, excludeBars) {%%00010        if (plotData.length === 0) {%%00010            // No data available warnings%%00010            var warning = '';%%00010            if (missValCatValues.length !== 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                warning = 'No chart was generated since all frequency columns have only missing values.\n' +%%00010                    'There are values where the category name is missing.\nTo see them switch on the option &quot;Include ' +%%00010                    '\'Missing values\' category&quot; in the view settings.';%%00010            } else {%%00010                warning = 'No chart was generated since all frequency columns have only missing values or empty.\n' +%%00010                    'Re-run the workflow with different data.';%%00010            }%%00010            knimeService.setWarningMessage(warning, NO_DATA_AVAILABLE);%%00010        } else {%%00010            knimeService.clearWarningMessage(NO_DATA_AVAILABLE);%%00010            // All other warnings%%00010            if (excludeCols.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage(%%00010                    'Following frequency columns are not present or contain only missing values and were ' +%%00010                    'excluded from the view:\n    ' + excludeCols.join(', '), FREQ_COLUMN_MISSING_VALUES_ONLY);%%00010            } else {%%00010                knimeService.clearWarningMessage(FREQ_COLUMN_MISSING_VALUES_ONLY);%%00010            }%%00010%%00010            if (excludeCats.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage(%%00010                    'Following categories contain only missing values and were excluded from the view:\n    ' +%%00010                    excludeCats.join(', '), CATEGORY_MISSING_VALUES_ONLY);%%00010            } else {%%00010                knimeService.clearWarningMessage(CATEGORY_MISSING_VALUES_ONLY);%%00010            }%%00010%%00010            if (excludeBars.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage(%%00010                    'Following bars contain only missing values in frequency column and were excluded from the ' +%%00010                    'view:\n    ' + excludeBars.join('\n    '), MISSING_VALUES_ONLY);%%00010            } else {%%00010                knimeService.clearWarningMessage(MISSING_VALUES_ONLY);%%00010            }%%00010        }%%00010    };%%00010%%00010    /**%%00010     * This is a workaround for the stacked plot problem coming from the nvd3%%00010     * library implementation. They do not really support missing values in the%%00010     * Stacked option: (https://github.com/novus/nvd3/issues/1941 - &quot;The%%00010     * solution is to adjust your data before handing it to nvd3.&quot; - nice%%00010     * answer) The implementation uses a simple d3.layout.stack which requires%%00010     * all data have the same length%%00010     * (https://github.com/d3/d3-3.x-api-reference/blob/master/Stack-Layout.md#_stack)%%00010     * Missing values may lead to different lengths. A workaround here is to add%%00010     * dummy null values in place of excluded bars before drawing to Stacked%%00010     * plot. And remove them before switching to Grouped plot.%%00010     * @param {bool} addDummy - true if dummy is supposed to be added, false otherwise%%00010     * @returns {undefined}%%00010     */%%00010    fixStackedData = function (addDummy) {%%00010        plotData.forEach(function (dataValues) {%%00010            var excludeCats = excludeFreqColCatMap[dataValues.key];%%00010            if (typeof excludeCats === 'undefined') {%%00010                // if this freq col does not have excluded bars at all - nothing%%00010                // to do%%00010                return;%%00010            }%%00010            if (addDummy) {%%00010                // Another implementation thing is that the categories in every%%00010                // freq col must follow the same order.%%00010                // So we cannot simply append dummy nulls to the end.%%00010                // Instead we need to replace the whole &quot;values&quot; array.%%00010                // We go over the categories and add either a real value or a%%00010                // dummy null depending on what's present.%%00010                var i = 0;%%00010                var j = 0;%%00010                var values = dataValues.values;%%00010                var newValues = [];%%00010                categories.forEach(function (cat) {%%00010                    if (cat === null) {%%00010                        return;%%00010                    }%%00010                    if (i &lt; values.length &amp;&amp; values[i].x === cat) {%%00010                        newValues.push(values[i]);%%00010                        i++;%%00010                    } else if (j &lt; excludeCats.length &amp;&amp; excludeCats[j] === cat) {%%00010                        newValues.push({%%00010                            x: cat,%%00010                            y: null%%00010                        });%%00010                        j++;%%00010                    }%%00010                });%%00010                if (i &lt; values.length &amp;&amp; values[i].x === MISSING_VALUES_LABEL) {%%00010                    newValues.push(values[i]);%%00010                } else if (j &lt; excludeCats.length &amp;&amp; excludeCats[j] === null) {%%00010                    newValues.push({%%00010                        x: MISSING_VALUES_LABEL,%%00010                        y: null%%00010                    });%%00010                }%%00010                dataValues.values = newValues;%%00010            } else {%%00010                // remove dummy null values (basically any null values as there%%00010                // can be no other nulls)%%00010                dataValues.values = dataValues.values.filter(function (value) {%%00010                    return value.y !== null;%%00010                });%%00010            }%%00010        });%%00010    };%%00010%%00010    updateTitles = function (updateChart) {%%00010        if (chart) {%%00010            var curTitle = d3.select('#title');%%00010            var curSubtitle = d3.select('#subtitle');%%00010            var chartNeedsUpdating = curTitle.empty() !== !_value.options.title ||%%00010                curSubtitle.empty() !== !_value.options.subtitle;%%00010            if (!_value.options.title) {%%00010                curTitle.remove();%%00010            }%%00010            if (_value.options.title) {%%00010                if (curTitle.empty()) {%%00010                    svg.append('text')%%00010                        .attr('x', 20)%%00010                        .attr('y', 30)%%00010                        .attr('id', 'title')%%00010                        .attr('class', 'knime-title')%%00010                        .text(_value.options.title);%%00010                } else {%%00010                    curTitle.text(_value.options.title);%%00010                }%%00010            }%%00010            if (!_value.options.subtitle) {%%00010                curSubtitle.remove();%%00010            }%%00010            if (_value.options.subtitle) {%%00010                if (curSubtitle.empty()) {%%00010                    svg.append('text')%%00010                        .attr('x', 20)%%00010                        .attr('y', _value.options.title ? 46 : 20)%%00010                        .attr('id', 'subtitle')%%00010                        .attr('class', 'knime-subtitle')%%00010                        .text(_value.options.subtitle);%%00010                } else {%%00010                    curSubtitle.text(_value.options.subtitle).attr('y', _value.options.title ? 46 : 20);%%00010                }%%00010            }%%00010%%00010            var topMargin = 10;%%00010            topMargin += _value.options.title ? 10 : 0;%%00010            topMargin += _value.options.subtitle ? 8 : 0;%%00010            if (_representation.options.legend) {%%00010                chart.legend.margin({%%00010                    top: topMargin,%%00010                    bottom: topMargin%%00010                });%%00010            } else {%%00010                chart.margin({%%00010                    top: topMargin * 2%%00010                });%%00010            }%%00010%%00010            var isTitle = _value.options.title || _value.options.subtitle;%%00010            knimeService.floatingHeader(isTitle);%%00010%%00010            if (updateChart &amp;&amp; chartNeedsUpdating) {%%00010                if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010                    var height = isTitle ? '100%' : 'calc(100% - ' + knimeService.headerHeight() + 'px)';%%00010                    layoutContainer.style('height', height)%%00010                        // two rows below force to invalidate the container which%%00010                        // solves a weird problem with vertical scroll bar in IE%%00010                        .style('display', 'none')%%00010                        .style('display', 'block');%%00010                    d3.select('#svgContainer').style('height', height);%%00010                }%%00010                chart.update();%%00010            }%%00010        }%%00010    };%%00010%%00010    /**%%00010     * Updates the axis labels after they have been wrapped. And add a title to%%00010     * show the full name. Additionally adjust the length of the maximum and%%00010     * minimum value on the y-axis.%%00010     * @returns {undefined}%%00010     */%%00010    updateLabels = function () {%%00010        var optShowMaximum = _value.options.showMaximum;%%00010        if (typeof optShowMaximum === 'undefined') {%%00010            optShowMaximum = _representation.options.showMaximum;%%00010        }%%00010        var optOrientation = _value.options.orientation;%%00010        var texts = svg.select('.knime-x').selectAll('text');%%00010        texts.each(function (d, i) {%%00010            if (typeof wrappedPlotData[0].values[i] !== 'undefined') {%%00010                var me = d3.select(this);%%00010                me.text(wrappedPlotData[0].values[i].x);%%00010                me.append('title').classed('knime-tooltip', true);%%00010            }%%00010        });%%00010        var stacked = _value.options.chartType;%%00010        var extremValues = [];%%00010        if (stacked === 'Grouped') {%%00010            extremValues = getRoundedMaxValue(false);%%00010        } else {%%00010            extremValues = getRoundedMaxValue(true);%%00010        }%%00010        var minValue = extremValues[0];%%00010        var maxValue = extremValues[1];%%00010%%00010        var tickAmount = chart.yAxis.ticks();%%00010        if (tickAmount &lt; 2) {%%00010            tickAmount = 2;%%00010        }%%00010%%00010        var textsYMin, textsYMax;%%00010        if (optShowMaximum) {%%00010            if (optOrientation) {%%00010                textsYMin = svg.select('.nv-axisMin-x').selectAll('text');%%00010                textsYMax = svg.select('.nv-axisMax-x').selectAll('text');%%00010            } else {%%00010                textsYMin = svg.select('.nv-axisMin-y').selectAll('text');%%00010                textsYMax = svg.select('.nv-axisMax-y').selectAll('text');%%00010            }%%00010            textsYMin.text(minValue);%%00010            textsYMax.text(maxValue);%%00010        }%%00010%%00010        var labelTooltip = texts.selectAll('.knime-tooltip');%%00010        var counter = 0;%%00010        labelTooltip.each(function () {%%00010            var me = d3.select(this);%%00010            if (typeof plotData[0].values[counter] !== 'undefined') {%%00010                me.text(plotData[0].values[counter].x);%%00010            }%%00010            counter++;%%00010        });%%00010%%00010        // Create titles for the Axis-Tooltips%%00010        svg.select('.knime-y text.knime-axis-label').append('title').classed('knime-tooltip', true).text(%%00010            _value.options.freqLabel);%%00010        svg.select('.knime-x text.knime-axis-label').append('title').classed('knime-tooltip', true).text(%%00010            _value.options.catLabel);%%00010    };%%00010%%00010    getRoundedMaxValue = function (isStacked) {%%00010        var maxValue = 0;%%00010        var minValue = 0;%%00010        var considerNegativeList = false;%%00010        if (isStacked) {%%00010            var stackedExtremValues = getStackedMaxValue (considerNegativeList, maxValue, minValue);%%00010            maxValue = stackedExtremValues.maxValue;%%00010            minValue = stackedExtremValues.minValue;%%00010        } else {%%00010            for (var i = 0; i &lt; plotData.length; i++) {%%00010                if (plotData[i].disabled !== true) {%%00010                    var tempMaxValue = Math.max(d3.max(plotData[i].values, function (d) {%%00010                        return parseFloat(d.y);%%00010                    }), 0);%%00010                    if (tempMaxValue &gt; maxValue) {%%00010                        maxValue = tempMaxValue;%%00010                    }%%00010                    var tempMinValue = Math.min(d3.min(plotData[i].values, function (d) {%%00010                        return parseFloat(d.y);%%00010                    }), 0);%%00010                    if (tempMinValue &lt; minValue) {%%00010                        minValue = tempMinValue;%%00010                    }%%00010                }%%00010            }%%00010        }%%00010%%00010        var tickAmount = chart.yAxis.ticks();%%00010        if (tickAmount &lt; 2) {%%00010            tickAmount = 2;%%00010        }%%00010%%00010        var scale = d3.scale.linear().domain([minValue, maxValue]);%%00010        var ticks = scale.ticks(tickAmount);%%00010        var precision = 1;%%00010        for (var tickI = 0; tickI &lt; ticks.length; tickI++) {%%00010            if (ticks[tickI] !== 0) {%%00010                var curTick = ticks[tickI];%%00010                if (curTick.toString().indexOf('.') &gt;= 0) {%%00010                    // +1 because the precision of the maximum should be one%%00010                    // decimal more then the normal ticks%%00010                    precision = Math.max(curTick.toString().split('.')[1].length + 1, precision);%%00010                } else if (curTick.toString().indexOf('e') &gt;= 0) {%%00010                    precision = Math.max(Math.abs(parseFloat(curTick.toString().split('e')[1])), precision);%%00010                }%%00010            }%%00010        }%%00010%%00010        var roundedMaxValue = Math.ceil(parseFloat(maxValue) * Math.pow(10, precision)) / Math.pow(10, precision);%%00010        var roundedMinValue = Math.floor(parseFloat(minValue) * Math.pow(10, precision)) / Math.pow(10, precision);%%00010        return [roundedMinValue, roundedMaxValue];%%00010    };%%00010%%00010    getStackedMaxValue = function (considerNegativeList, maxValue, minValue) {%%00010        var sumListPositive = [];%%00010        var sumListNegative = [];%%00010        for (var dataI = 0; dataI &lt; plotData.length; dataI++) {%%00010            for (var valueI = 0; valueI &lt; plotData[dataI].values.length; valueI++) {%%00010                if (sumListPositive.length &lt; plotData[dataI].values.length) {%%00010                    sumListPositive.push(0);%%00010                    sumListNegative.push(0);%%00010                }%%00010                if (plotData[dataI].disabled !== true) {%%00010                    if (plotData[dataI].values[valueI].y &gt; 0) {%%00010                        sumListPositive[valueI] += plotData[dataI].values[valueI].y;%%00010                    } else {%%00010                        sumListNegative[valueI] += plotData[dataI].values[valueI].y;%%00010                        considerNegativeList = true;%%00010                    }%%00010                }%%00010            }%%00010        }%%00010        maxValue = d3.max(sumListPositive);%%00010        if (considerNegativeList) {%%00010            minValue = d3.min(sumListNegative);%%00010        }%%00010        return { minValue: minValue, maxValue: maxValue };%%00010    };%%00010%%00010    /**%%00010     * Find the max size of one element on the y-axis to see how much space is needed. To find out the max size, a%%00010     * temp-text object is created and measured. Afterwards that temp-text is deleted (is not visible in the view).%%00010     * @param {bool} optShowMaximum%%00010     * @returns {object}%%00010     */%%00010    function checkMaxSizeYAxis(optShowMaximum) {%%00010        var maxValue = 0;%%00010        var minValue = 0;%%00010        var extremValues = [];%%00010        var stacked = _value.options.chartType;%%00010        if (stacked === 'Grouped') {%%00010            extremValues = getRoundedMaxValue(false);%%00010        } else {%%00010            extremValues = getRoundedMaxValue(true);%%00010        }%%00010        minValue = extremValues[0];%%00010        maxValue = extremValues[1];%%00010%%00010        var svgHeight = parseInt(d3.select('svg').style('height'), 10);%%00010        var svgWidth = parseInt(d3.select('svg').style('width'), 10);%%00010%%00010        // Calculate values of the y-axis to get an impression about the precision.%%00010        var scale = d3.scale.linear().domain([minValue, maxValue]).range(%%00010            [0, _representation.options.svg.height]);%%00010        var defaultTicksAmount = 4;%%00010        var ticks = scale.ticks(defaultTicksAmount);%%00010        if (optShowMaximum) {%%00010            if (maxValue.toString().indexOf('.') &gt; 0) {%%00010                if (ticks[ticks.length - 1].toString().indexOf('.') &gt; 0) {%%00010                    var decimalString = ticks[ticks.length - 1].toString().split('.')[1];%%00010                    ticks.push(parseFloat(maxValue.toFixed(decimalString.length) + 1));%%00010                } else {%%00010                    ticks.push(parseFloat(maxValue.toFixed(0)));%%00010                }%%00010            } else {%%00010                ticks.push(maxValue);%%00010            }%%00010            if (minValue &lt; 0 &amp;&amp; minValue.toString().indexOf('e') &lt; 0) {%%00010                if (ticks[0].toString().split('.')[1]) {%%00010                    ticks.push(minValue.toFixed(ticks[0].toString().split('.')[1].length - 1));%%00010                } else {%%00010                    ticks.push(minValue.toFixed(1));%%00010                }%%00010            } else if (minValue &lt; 0) {%%00010                ticks.push(minValue);%%00010            }%%00010        }%%00010        var configObject = {%%00010            container: document.querySelector('svg'),%%00010            tempContainerClasses: 'knime-axis',%%00010            maxWidth: svgWidth,%%00010            maxHeight: svgHeight%%00010        };%%00010%%00010        var results = knimeService.measureAndTruncate(ticks, configObject);%%00010%%00010        // Return the format to show the result and the space needed to the left border.%%00010        return results;%%00010    }%%00010%%00010    /**%%00010     * Find the max size of the biggest element on the x-Axis. Move the Graph so that this object is completely visible.%%00010     * @param {array} dataValues - the data array of which the chart should be created for%%00010     * @param {bool} staggerLabels - true if x axis labels are staggered (allows more space), false otherwise%%00010     * @returns {object}%%00010     */%%00010    checkMaxSizeXAxis = function (dataValues, staggerLabels) {%%00010        var maxWidth, barWidth, nValue, group, groupValue;%%00010        var optOrientation = _value.options.orientation;%%00010        // var svgHeight = parseInt(d3.select('svg').style('height'));%%00010        var svgWidth = parseInt(d3.select('svg').style('width'), 10);%%00010        var amountOfBars = dataValues[0].values.length;%%00010        var amountOfDimensions = dataValues.length;%%00010%%00010        var spaceBetweenBars = _representation.isHistogram ? 0 : 40;%%00010        if (optOrientation) {%%00010            maxWidth = svgWidth / 2;%%00010        } else {%%00010            if (d3.select('.nv-groups').node() === null) {%%00010                barWidth = svgWidth / amountOfBars - spaceBetweenBars;%%00010            } else {%%00010                barWidth = d3.select('.nv-groups').select('rect')[0][0].width.baseVal.value * amountOfDimensions;%%00010            }%%00010            if (staggerLabels) {%%00010                maxWidth = barWidth * 2;%%00010            } else {%%00010                maxWidth = barWidth;%%00010            }%%00010        }%%00010%%00010        var configObject = {%%00010            container: document.querySelector('svg'),%%00010            tempContainerClasses: 'knime-axis',%%00010            /* maxHeight: svgHeight / amountOfBars, */%%00010            minimalChars: 1%%00010        };%%00010        if (!_representation.isHistogram) {%%00010            configObject.maxWidth = maxWidth;%%00010        }%%00010        var xValues = [];%%00010        for (nValue in dataValues[0].values) {%%00010            xValues.push(dataValues[0].values[nValue].x);%%00010        }%%00010%%00010        var results = knimeService.measureAndTruncate(xValues, configObject);%%00010%%00010        var xExtremValues = [];%%00010        xExtremValues.push(dataValues[0].values[0].x);%%00010        xExtremValues.push(dataValues[0].values[dataValues[0].values.length - 1].x);%%00010%%00010        if (staggerLabels) {%%00010            if (!optOrientation) {%%00010                configObject.maxWidth = svgWidth / amountOfBars - spaceBetweenBars;%%00010            }%%00010        }%%00010        var extremResults = knimeService.measureAndTruncate(xExtremValues, configObject);%%00010%%00010        // Update the cloned data array to contain the wrapped labels%%00010        for (group in dataValues) {%%00010            for (groupValue in dataValues[group].values) {%%00010                if (groupValue === 0) {%%00010                    wrappedPlotData[group].values[groupValue].x = extremResults.values[0].truncated;%%00010                } else if (groupValue === dataValues[group].values.length - 1) {%%00010                    wrappedPlotData[group].values[groupValue].x = extremResults.values[1].truncated;%%00010                } else {%%00010                    var val = results.values[parseInt(groupValue, 10)];%%00010                    wrappedPlotData[group].values[groupValue].x = typeof val === 'undefined' ? null : val.truncated;%%00010                }%%00010            }%%00010        }%%00010        return results;%%00010    };%%00010%%00010    // eslint-disable-next-line complexity%%00010    updateAxisLabels = function (updateChart) {%%00010%%00010        if (chart) {%%00010            var optOrientation = _value.options.orientation;%%00010            var optStaggerLabels = _value.options.staggerLabels;%%00010            var stacked = _value.options.chartType;%%00010            var optShowMaximum = _value.options.showMaximum;%%00010            var curCatAxisLabel, curFreqAxisLabel;%%00010            var curCatAxisLabelElement = d3.select('.nv-x.nv-axis .nv-axis-label');%%00010            var curFreqAxisLabelElement = d3.select('.nv-y.nv-axis .nv-axis-label');%%00010            var freqLabel = _value.options.freqLabel;%%00010            var catLabel = _value.options.catLabel;%%00010            var svgHeight = parseInt(d3.select('svg').style('height'), 10);%%00010            var svgWidth = parseInt(d3.select('svg').style('width'), 10);%%00010%%00010            if (typeof optShowMaximum === 'undefined') {%%00010                optShowMaximum = _representation.options.showMaximum;%%00010            }%%00010%%00010            wrappedPlotData = JSON.parse(JSON.stringify(plotData));%%00010%%00010            if (!curCatAxisLabelElement.empty()) {%%00010                curCatAxisLabel = curCatAxisLabelElement.text();%%00010            }%%00010%%00010            if (!curFreqAxisLabelElement.empty()) {%%00010                curFreqAxisLabel = curCatAxisLabelElement.text();%%00010            }%%00010%%00010            var chartNeedsUpdating = curCatAxisLabel !== _value.options.catLabel ||%%00010                curFreqAxisLabel !== _value.options.freqLabel;%%00010            if (!chartNeedsUpdating) {%%00010                return;%%00010            }%%00010%%00010            var configObjectLabels = {%%00010                container: document.querySelector('svg'),%%00010                tempContainerClasses: 'knime-axis-label',%%00010                maxWidth: svgWidth / 2,%%00010                maxHeight: svgHeight / 2,%%00010                minimalChars: 1%%00010            };%%00010%%00010            configObjectLabels.tempContainerAttributes = optOrientation ? { transform: 'rotate(-90)' } : '';%%00010            var catLabelSize = knimeService.measureAndTruncate(catLabel ? [catLabel] : [''], configObjectLabels);%%00010            configObjectLabels.tempContainerAttributes.transform = optOrientation ? '' : { transform: 'rotate(-90)' };%%00010            var freqLabelSize = knimeService.measureAndTruncate(freqLabel ? [freqLabel] : [''], configObjectLabels);%%00010%%00010            var maxSizeYAxis = checkMaxSizeYAxis(optShowMaximum);%%00010            var maxSizeXAxis = checkMaxSizeXAxis(wrappedPlotData, optStaggerLabels);%%00010            var svgSize = optOrientation ? parseInt(d3.select('svg').style('width'), 10)%%00010                : parseInt(d3.select('svg').style('height'), 10);%%00010%%00010            freqLabel = freqLabelSize.values[0].truncated;%%00010            catLabel = catLabelSize.values[0].truncated;%%00010%%00010            // space between two labels%%00010            var distanceBetweenLabels = 150;%%00010            var tickAmount = 0;%%00010            var rightMargin = 0;%%00010%%00010            if (optOrientation) {%%00010                tickAmount = parseInt((svgSize - maxSizeXAxis.max.maxWidth) /%%00010                    (maxSizeYAxis.max.maxWidth + distanceBetweenLabels), 10);%%00010                if (optShowMaximum) {%%00010                    // extend the border of the svg to be able to see the complete maximum label%%00010                    // factor 0.6 is chosen to give the label a little space to the border%%00010                    rightMargin = 0.6 * maxSizeYAxis.max.maxWidth;%%00010                }%%00010            } else {%%00010                tickAmount = parseInt((svgSize - maxSizeYAxis.max.maxHeight) /%%00010                    (maxSizeYAxis.max.maxHeight + distanceBetweenLabels), 10);%%00010            }%%00010%%00010            // nvd3 sets the cat label 55 pixel away from the axis. As with changing font size this%%00010            // is not enough, it is easier to calculate it ourselves%%00010            var spacingCatLabel = 25;%%00010%%00010            // nvd3 sets the freq label 20 pixel away from the axis. As with changing font size this%%00010            // is not enough, it is easier to calculate it ourselves%%00010            var spacingFreqLabel = 30;%%00010%%00010            // add some empty space, so that two labels are not to close together%%00010            var additionalEmptySpace = 15;%%00010%%00010            // add some empty space when labels are staggered. Normal empty space is too much.%%00010            var staggerLabelsAdditionalSpace = 5;%%00010%%00010            // space to the y-axis assured by nvd3%%00010            var paddingAmount = 15;%%00010%%00010            var xLabelDistance = 0;%%00010            var yLabelDistance = 0;%%00010%%00010            if (optOrientation) {%%00010                // -spacingCatLabel: reset the label to the position of the axis%%00010                // + maxSizeAxis: the calculated space needed by the label itself%%00010                // + additionalEmptySpace: add some empty space%%00010                // + freqLabelSize: on the x-Axis we have to account for the height of the label%%00010                xLabelDistance = -spacingFreqLabel + maxSizeXAxis.max.maxWidth + additionalEmptySpace;%%00010                yLabelDistance = -spacingCatLabel + freqLabelSize.max.maxHeight + additionalEmptySpace;%%00010            } else {%%00010                if (optStaggerLabels) {%%00010                    // -spacingCatLabel: reset the label to the position of the axis%%00010                    // maxSizeAxis: the calculated space needed by the label itself. 2x when staggered as%%00010                    // there are two lines in that case%%00010                    xLabelDistance = -spacingCatLabel + 2 * maxSizeXAxis.max.maxHeight + catLabelSize.max.maxHeight%%00010                        + additionalEmptySpace;%%00010                } else {%%00010                    xLabelDistance = -spacingCatLabel + maxSizeXAxis.max.maxHeight + catLabelSize.max.maxHeight%%00010                        + additionalEmptySpace;%%00010                }%%00010                yLabelDistance = -spacingFreqLabel + maxSizeYAxis.max.maxWidth + additionalEmptySpace;;%%00010            }%%00010%%00010            chart.xAxis.axisLabel(catLabel)%%00010                .axisLabelDistance(xLabelDistance)%%00010                .tickPadding(paddingAmount)%%00010                .showMaxMin(false);%%00010%%00010            chart.yAxis.axisLabel(freqLabel)%%00010                .axisLabelDistance(yLabelDistance)%%00010                .showMaxMin(optShowMaximum)%%00010                .ticks(tickAmount)%%00010                .tickFormat(d3.format('~.g'));%%00010%%00010            var extremValues = [];%%00010            if (stacked === 'Grouped') {%%00010                extremValues = getRoundedMaxValue(false);%%00010            } else {%%00010                extremValues = getRoundedMaxValue(true);%%00010            }%%00010            chart.yDomain([extremValues[0], extremValues[1]]);%%00010%%00010            // calculate the space the charts needs below the actual chart%%00010            // its calculated from the height of the text element,%%00010            // the height of the axis label and 2 times additional space for the 2 gaps between elements%%00010            var bottomMargin = optOrientation%%00010                ? maxSizeYAxis.max.maxHeight + freqLabelSize.max.maxHeight + 2 * additionalEmptySpace%%00010                : maxSizeXAxis.max.maxHeight + catLabelSize.max.maxHeight + 2 * additionalEmptySpace;%%00010            var leftMargin = optOrientation%%00010                ? maxSizeXAxis.max.maxWidth + catLabelSize.max.maxWidth + 2 * additionalEmptySpace%%00010                : maxSizeYAxis.max.maxWidth + freqLabelSize.max.maxHeight + 2 * additionalEmptySpace;%%00010%%00010            if (!_value.options.catLabel) {%%00010                bottomMargin = optOrientation ? bottomMargin : maxSizeXAxis.max.maxHeight + additionalEmptySpace;%%00010                leftMargin = optOrientation ? maxSizeXAxis.max.maxWidth + additionalEmptySpace : leftMargin;%%00010            }%%00010            if (!_value.options.freqLabel) {%%00010                bottomMargin = optOrientation ? maxSizeXAxis.max.maxHeight + additionalEmptySpace : bottomMargin;%%00010                leftMargin = optOrientation ? leftMargin : maxSizeYAxis.max.maxWidth + additionalEmptySpace;%%00010            }%%00010%%00010            if (!optOrientation) {%%00010                chart.staggerLabels(optStaggerLabels);%%00010                if (optStaggerLabels) {%%00010                    bottomMargin += _value.options.catLabel%%00010                        ? maxSizeXAxis.max.maxHeight + staggerLabelsAdditionalSpace%%00010                        : maxSizeXAxis.max.maxHeight / 2 + paddingAmount;%%00010                }%%00010            }%%00010            chart.margin({%%00010                left: leftMargin,%%00010                bottom: bottomMargin,%%00010                right: rightMargin%%00010            });%%00010%%00010            if (updateChart) {%%00010                chart.update();%%00010            }%%00010        }%%00010    };%%00010%%00010    updateChartType = function () {%%00010        if (this.value !== _value.options.chartType) {%%00010            _value.options.chartType = this.value;%%00010            var stacked = this.value === 'Stacked';%%00010            fixStackedData(stacked);%%00010            chart.stacked(stacked);%%00010            drawChart(true);%%00010        }%%00010    };%%00010    // eslint-disable-next-line complexity%%00010    drawControls = function () {%%00010        if (!knimeService) {%%00010            return;%%00010        }%%00010%%00010        if (_representation.options.displayFullscreenButton) {%%00010            knimeService.allowFullscreen();%%00010        }%%00010        if (!_representation.options.enableViewControls) {%%00010            return;%%00010        }%%00010%%00010        var titleEdit = _representation.options.enableTitleEdit;%%00010        var subtitleEdit = _representation.options.enableSubtitleEdit;%%00010        var axisEdit = _representation.options.enableAxisEdit;%%00010        var chartTypeEdit = _representation.options.enableStackedEdit;%%00010        var orientationEdit = _representation.options.enableHorizontalToggle;%%00010        var staggerLabels = _representation.options.enableStaggerToggle;%%00010        var switchMissValCat = _representation.options.enableSwitchMissValCat;%%00010        var showMaximum = _representation.options.enableMaximumValue;%%00010        var enableSelection = _representation.options.enableSelection;%%00010        var displayClearButton = _representation.options.displayClearSelectionButton;%%00010        var enableStaticValuesEdit = _representation.options.enableStaticValuesEdit;%%00010%%00010        if (titleEdit) {%%00010            var chartTitleText = knimeService.createMenuTextField('chartTitleText', _value.options.title,%%00010                function () {%%00010                    if (_value.options.title !== this.value) {%%00010                        _value.options.title = this.value;%%00010                        updateTitles(true);%%00010                    }%%00010                }, true);%%00010            knimeService.addMenuItem('Chart Title:', 'header', chartTitleText);%%00010        }%%00010        if (subtitleEdit) {%%00010            var chartSubtitleText = knimeService.createMenuTextField('chartSubtitleText', _value.options.subtitle,%%00010                function () {%%00010                    if (_value.options.subtitle !== this.value) {%%00010                        _value.options.subtitle = this.value;%%00010                        updateTitles(true);%%00010                    }%%00010                }, true);%%00010            knimeService.addMenuItem('Chart Subtitle:', 'header', chartSubtitleText, null, knimeService.SMALL_ICON);%%00010        }%%00010        if ((titleEdit  || subtitleEdit) &amp;&amp; (axisEdit || orientationEdit || staggerLabels)) {%%00010            knimeService.addMenuDivider();%%00010        }%%00010%%00010        if (axisEdit) {%%00010            var catAxisText = knimeService.createMenuTextField('catAxisText', _value.options.catLabel, function () {%%00010                _value.options.catLabel = this.value;%%00010                updateAxisLabels(true);%%00010            }, true);%%00010            knimeService.addMenuItem('Category axis label:', 'ellipsis-h', catAxisText);%%00010%%00010            var freqAxisText = knimeService.createMenuTextField('freqAxisText', _value.options.freqLabel, function () {%%00010                _value.options.freqLabel = this.value;%%00010                updateAxisLabels(true);%%00010            }, true);%%00010            knimeService.addMenuItem('Frequency axis label:', 'ellipsis-v', freqAxisText);%%00010%%00010            if (switchMissValCat || orientationEdit || staggerLabels || chartTypeEdit) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (switchMissValCat &amp;&amp; isMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010            var switchMissValCatCbx =%%00010                knimeService.createMenuCheckbox('switchMissValCatCbx', _value.options.includeMissValCat, function () {%%00010                    if (_value.options.includeMissValCat !== this.checked) {%%00010                        _value.options.includeMissValCat = this.checked;%%00010                        var stacked = _value.options.chartType === 'Stacked';%%00010                        if (stacked) {%%00010                            fixStackedData(false);%%00010                        }%%00010                        processMissingValues(true);%%00010                        if (stacked) {%%00010                            fixStackedData(true);%%00010                        }%%00010                        chart.update();%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Include \'Missing values\' category: ', 'question', switchMissValCatCbx);%%00010%%00010            if (orientationEdit || staggerLabels || chartTypeEdit) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (chartTypeEdit) {%%00010            var groupedRadio = knimeService.createMenuRadioButton('groupedRadio', 'chartType', 'Grouped',%%00010                updateChartType);%%00010            groupedRadio.checked = _value.options.chartType === groupedRadio.value;%%00010            knimeService.addMenuItem('Grouped:', 'align-left fa-rotate-270', groupedRadio);%%00010%%00010            var stackedRadio = knimeService.createMenuRadioButton('stackedRadio', 'chartType', 'Stacked',%%00010                updateChartType);%%00010            stackedRadio.checked = _value.options.chartType === stackedRadio.value;%%00010            knimeService.addMenuItem('Stacked:', 'tasks fa-rotate-270', stackedRadio);%%00010%%00010            if (orientationEdit || staggerLabels) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (orientationEdit) {%%00010            var orientationCbx = knimeService.createMenuCheckbox('orientationCbx', _value.options.orientation,%%00010                function () {%%00010                    if (_value.options.orientation !== this.checked) {%%00010                        _value.options.orientation = this.checked;%%00010                        d3.select('#staggerCbx').property('disabled', this.checked);%%00010                        drawChart(true);%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Plot horizontal bar chart:', 'align-left', orientationCbx);%%00010        }%%00010%%00010        if (staggerLabels) {%%00010            var staggerCbx = knimeService.createMenuCheckbox('staggerCbx', _value.options.staggerLabels, function () {%%00010                if (_value.options.staggerLabels !== this.checked) {%%00010                    _value.options.staggerLabels = this.checked;%%00010                    drawChart(true);%%00010                }%%00010            });%%00010            staggerCbx.disabled = _value.options.orientation;%%00010            knimeService.addMenuItem('Stagger labels:', 'map-o', staggerCbx);%%00010        }%%00010%%00010        if (showMaximum) {%%00010            var displayMaximumCbx = knimeService.createMenuCheckbox('displayMaximumCbx', _value.options.showMaximum,%%00010                function () {%%00010                    if (_value.options.showMaximum !== this.checked) {%%00010                        _value.options.showMaximum = this.checked;%%00010                        drawChart(true);%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Display maximum value:', 'arrows-v', displayMaximumCbx);%%00010        }%%00010%%00010        if (enableStaticValuesEdit) {%%00010            var enableStaticValues = knimeService.createMenuCheckbox('enableStaticValues', _value.options.showStaticBarValues, function () {%%00010                if (_value.options.showStaticBarValues !== this.checked) {%%00010                    _value.options.showStaticBarValues = this.checked;%%00010                    if (_value.options.showStaticBarValues) {%%00010                        createStaticBarValues();%%00010                    } else {%%00010                        removeStaticBarValues();%%00010                    }%%00010                }%%00010            }, true);%%00010            knimeService.addMenuItem('Show static bar values:', 'hashtag', enableStaticValues);%%00010        }%%00010%%00010        if (enableSelection) {%%00010            knimeService.addMenuDivider();%%00010            var subscribeToSelectionIcon = knimeService.createStackedIcon('check-square-o', 'angle-double-right',%%00010                'faded right sm', 'left bold');%%00010            var subscribeToSelectionMenu = knimeService.createMenuCheckbox('subscribeToSelection',%%00010                _value.options.subscribeToSelection, function () {%%00010                    if (_value.options.subscribeToSelection !== this.checked) {%%00010                        _value.options.subscribeToSelection = this.checked;%%00010                        subscribeToSelection(_value.options.subscribeToSelection);%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Subscribe to selection:', subscribeToSelectionIcon, subscribeToSelectionMenu);%%00010%%00010            var publishSelectionIcon = knimeService.createStackedIcon('check-square-o', 'angle-right', 'faded left sm',%%00010                'right bold');%%00010            var publishSelectionMenu = knimeService.createMenuCheckbox('publishSelection',%%00010                _value.options.publishSelection, function () {%%00010                    if (_value.options.publishSelection !== this.checked) {%%00010                        _value.options.publishSelection = this.checked;%%00010                        publishSelection(this.checked);%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Publish selection:', publishSelectionIcon, publishSelectionMenu);%%00010        }%%00010%%00010        if (displayClearButton &amp;&amp;  _representation.options.enableSelection) {%%00010            knimeService.addButton('clearSelectionButton', 'minus-square-o', 'Clear selection', function () {%%00010                d3.selectAll('.row').classed({ selected: false, 'knime-selected': false, unselected: false });%%00010                removeHilightBar('', true);%%00010                _value.options.selection = [];%%00010                publishSelection(true);%%00010            });%%00010            d3.select('#clearSelectionButton').classed('inactive', true);%%00010        }%%00010    };%%00010%%00010    setCssClasses = function () {%%00010        // axis%%00010        var axis = d3.selectAll('.nv-axis')%%00010            .classed('knime-axis', true);%%00010        d3.selectAll('.nv-x')%%00010            .classed('knime-x', true);%%00010        d3.selectAll('.nv-y')%%00010            .classed('knime-y', true);%%00010        d3.selectAll('.nv-axislabel')%%00010            .classed('knime-axis-label', true);%%00010        axis.selectAll('path.domain')%%00010            .classed('knime-axis-line', true);%%00010        var axisMaxMin = d3.selectAll('.nv-axisMaxMin')%%00010            .classed('knime-axis-max-min', true);%%00010        axisMaxMin.selectAll('text')%%00010            .classed('knime-tick-label', true);%%00010        var tick = axis.selectAll('.knime-axis .tick')%%00010            .classed('knime-tick', true);%%00010        tick.selectAll('text')%%00010            .classed('knime-tick-label', true);%%00010        tick.selectAll('line')%%00010            .classed('knime-tick-line', true);%%00010%%00010        // legend%%00010        d3.selectAll('.nv-legendWrap')%%00010            .classed('knime-legend', true);%%00010        d3.selectAll('.nv-legend-symbol')%%00010            .classed('knime-legend-symbol', true);%%00010        d3.selectAll('.nv-legend-text')%%00010            .classed('knime-legend-label', true);%%00010%%00010        // Tooltip for axis labels allows to receive all mouse events%%00010        var axisToolTip = svg.selectAll('.knime-tick-label');%%00010        var labelToolTip = svg.selectAll('.knime-axis-label');%%00010        axisToolTip.style('pointer-events', 'all');%%00010        labelToolTip.style('pointer-events', 'all');%%00010        updateLabels();%%00010        if (_representation.options.enableSelection) {%%00010            registerClickHandler();%%00010        }%%00010    };%%00010%%00010    setTooltipCssClasses = function () {%%00010        // tooltip%%00010        var tooltip = d3.selectAll('.nvtooltip').classed('knime-tooltip', true);%%00010        tooltip.selectAll('.x-value').classed('knime-tooltip-caption', true).classed('knime-x', true);%%00010        tooltip.selectAll('.legend-color-guide').classed('knime-tooltip-color', true);%%00010        tooltip.selectAll('.key').classed('knime-tooltip-key', true);%%00010        tooltip.selectAll('.value').classed('knime-tooltip-value', true);%%00010    };%%00010%%00010    barChart.validate = function () {%%00010        return true;%%00010    };%%00010%%00010    barChart.getComponentValue = function () {%%00010        return _value;%%00010    };%%00010%%00010    barChart.getSVG = function () {%%00010        var svgElement = d3.select('svg')[0][0];%%00010        knimeService.inlineSvgStyles(svgElement);%%00010%%00010        // Return the SVG as a string.%%00010        return (new XMLSerializer()).serializeToString(svgElement);%%00010    };%%00010%%00010    return barChart;%%00010})();%%00010"/>
    </config>
    <config key="cssCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="/* make sure colors on bars are correct (inherit from group) */%%00010svg.colored .nvd3 .nv-multibar .nv-groups rect, %%00010svg.colored .nvd3 .nv-multibarHorizontal .nv-groups rect, %%00010svg.colored .nvd3 .nv-discretebar .nv-groups rect {%%00010%%00009fill: inherit !important;%%00010%%00009stroke: inherit !important;%%00010}%%00010%%00010text.knime-tick-label.knime-selected {%%00010%%00009font-weight: bold;%%00010}%%00010rect.knime-selected {%%00010%%00009fill: orange;%%00010%%00009%%00010}%%00010rect.knime-partially-selected {%%00010%%00009fill: grey;%%00010}%%00010text.knime-tick-label.knime-partially-selected {%%00010%%00009font-weight: bold;%%00010}%%00010%%00010rect.nv-bar.positive {%%00010%%00009cursor:pointer;%%00010}%%00010%%00010/* don't display the maximum grid line if present on vertical bar chart */%%00010/*.nv-multiBarWithLegend .knime-axis.knime-y g.tick.knime-tick:nth-last-child(3) line {%%00010    display: none;%%00010}*/"/>
    </config>
    <config key="jsDependencies">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="dependency_0">
            <entry key="name" type="xstring" value="nvd3"/>
            <entry key="path" type="xstring" value="js-lib/nvd3/1.8.6/nv.d3.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" value="nv"/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="1"/>
                <entry key="0" type="xstring" value="D3_3.5.5"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
        <config key="dependency_1">
            <entry key="name" type="xstring" value="D3_3.5.5"/>
            <entry key="path" type="xstring" value="js-lib/d3/d3.v3_5_5.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" isnull="true" value=""/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
    </config>
    <config key="cssDependencies">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="js-lib/nvd3/1.8.6/nv.d3.min.css"/>
    </config>
    <entry key="new" type="xboolean" value="false"/>
    <entry key="inView" type="xboolean" value="true"/>
    <config key="tableIds">
        <entry key="array-size" type="xint" value="2"/>
        <entry key="0" type="xstring" value="76e7be08-d7e2-4172-b5c2-dccbca5306e2"/>
        <entry key="1" type="xstring" isnull="true" value=""/>
    </config>
    <config key="variables">
        <entry key="numSettings" type="xint" value="1"/>
        <entry key="mapClass" type="xstring" value="string"/>
        <entry key="key_0" type="xstring" value="knime.workspace"/>
        <entry key="class_0" type="xstring" value="java.lang.String"/>
        <entry key="value_0" type="xstring" value="E:\New folder (4)\netfilx"/>
    </config>
    <config key="binaryFiles">
        <entry key="numSettings" type="xint" value="0"/>
        <entry key="mapClass" type="xstring" value="string"/>
    </config>
    <config key="options">
        <entry key="numSettings" type="xint" value="23"/>
        <entry key="mapClass" type="xstring" value="object"/>
        <entry key="key_0" type="xstring" value="displayFullscreenButton"/>
        <entry key="class_0" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_0" type="xboolean" value="true"/>
        <entry key="key_1" type="xstring" value="displayClearSelectionButton"/>
        <entry key="class_1" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_1" type="xboolean" value="true"/>
        <entry key="key_2" type="xstring" value="svg"/>
        <entry key="class_2" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
        <config key="value_2">
            <entry key="width" type="xint" value="800"/>
            <entry key="height" type="xint" value="600"/>
            <entry key="fullscreen" type="xboolean" value="true"/>
        </config>
        <entry key="key_3" type="xstring" value="legend"/>
        <entry key="class_3" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_3" type="xboolean" value="true"/>
        <entry key="key_4" type="xstring" value="enableHorizontalToggle"/>
        <entry key="class_4" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_4" type="xboolean" value="true"/>
        <entry key="key_5" type="xstring" value="freq"/>
        <entry key="class_5" type="xstring" value="[Ljava.lang.String;"/>
        <config key="value_5">
            <entry key="array-size" type="xint" value="2"/>
            <entry key="0" type="xstring" value="release_year"/>
            <entry key="1" type="xstring" value="duration_Arr[0]"/>
        </config>
        <entry key="key_6" type="xstring" value="tooltip"/>
        <entry key="class_6" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_6" type="xboolean" value="true"/>
        <entry key="key_7" type="xstring" value="enableTitleEdit"/>
        <entry key="class_7" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_7" type="xboolean" value="true"/>
        <entry key="key_8" type="xstring" value="enableSelection"/>
        <entry key="class_8" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_8" type="xboolean" value="true"/>
        <entry key="key_9" type="xstring" value="sort"/>
        <entry key="class_9" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_9" type="xboolean" value="false"/>
        <entry key="key_10" type="xstring" value="enableSwitchMissValCat"/>
        <entry key="class_10" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_10" type="xboolean" value="true"/>
        <entry key="key_11" type="xstring" value="enableStackedEdit"/>
        <entry key="class_11" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_11" type="xboolean" value="true"/>
        <entry key="key_12" type="xstring" value="enableAxisEdit"/>
        <entry key="class_12" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_12" type="xboolean" value="true"/>
        <entry key="key_13" type="xstring" value="processInMemory"/>
        <entry key="class_13" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_13" type="xboolean" value="true"/>
        <entry key="key_14" type="xstring" value="reportOnMissingValues"/>
        <entry key="class_14" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_14" type="xboolean" value="true"/>
        <entry key="key_15" type="xstring" value="cat"/>
        <entry key="class_15" type="xstring" value="java.lang.String"/>
        <entry key="value_15" type="xstring" value="duration_Arr[0] (#1)"/>
        <entry key="key_16" type="xstring" value="enableStaggerToggle"/>
        <entry key="class_16" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_16" type="xboolean" value="true"/>
        <entry key="key_17" type="xstring" value="enableStaticValuesEdit"/>
        <entry key="class_17" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_17" type="xboolean" value="true"/>
        <entry key="key_18" type="xstring" value="enableViewControls"/>
        <entry key="class_18" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_18" type="xboolean" value="true"/>
        <entry key="key_19" type="xstring" value="showWarnings"/>
        <entry key="class_19" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_19" type="xboolean" value="true"/>
        <entry key="key_20" type="xstring" value="enableSubtitleEdit"/>
        <entry key="class_20" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_20" type="xboolean" value="true"/>
        <entry key="key_21" type="xstring" value="aggr"/>
        <entry key="class_21" type="xstring" value="java.lang.String"/>
        <entry key="value_21" type="xstring" value="Occurence Count"/>
        <entry key="key_22" type="xstring" value="enableMaximumValue"/>
        <entry key="class_22" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_22" type="xboolean" value="true"/>
    </config>
    <config key="inObjects">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="inObject_0">
            <entry key="className" type="xstring" value="org.knime.dynamic.js.base.grouped.GroupedProcessor$GroupingResult"/>
            <entry key="jsonValue" type="xstring" value="{&quot;uuid&quot;:&quot;e99dcfff-7864-4db1-8a26-26f5a792334a&quot;,&quot;table&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;filtered&quot;:false,&quot;fragment&quot;:false,&quot;id&quot;:&quot;c6f109b5-a410-4ec4-a8b0-c90d87981709&quot;,&quot;rows&quot;:[{&quot;data&quot;:[&quot;2&quot;,425.0],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;1&quot;,1793.0],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;9&quot;,9.0],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;4&quot;,95.0],&quot;rowKey&quot;:&quot;Row3&quot;},{&quot;data&quot;:[&quot;5&quot;,65.0],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;3&quot;,199.0],&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;data&quot;:[&quot;6&quot;,33.0],&quot;rowKey&quot;:&quot;Row6&quot;},{&quot;data&quot;:[&quot;7&quot;,23.0],&quot;rowKey&quot;:&quot;Row7&quot;},{&quot;data&quot;:[&quot;10&quot;,7.0],&quot;rowKey&quot;:&quot;Row8&quot;},{&quot;data&quot;:[&quot;8&quot;,17.0],&quot;rowKey&quot;:&quot;Row9&quot;},{&quot;data&quot;:[&quot;17&quot;,1.0],&quot;rowKey&quot;:&quot;Row10&quot;},{&quot;data&quot;:[&quot;13&quot;,3.0],&quot;rowKey&quot;:&quot;Row11&quot;},{&quot;data&quot;:[&quot;15&quot;,2.0],&quot;rowKey&quot;:&quot;Row12&quot;},{&quot;data&quot;:[&quot;12&quot;,2.0],&quot;rowKey&quot;:&quot;Row13&quot;},{&quot;data&quot;:[&quot;11&quot;,2.0],&quot;rowKey&quot;:&quot;Row14&quot;}],&quot;totalRows&quot;:0,&quot;dataHash&quot;:null,&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;numExtensions&quot;:0,&quot;extensionNames&quot;:[],&quot;extensionTypes&quot;:[],&quot;rowSizeValues&quot;:null,&quot;minValues&quot;:[&quot;1&quot;,1.0],&quot;numColumns&quot;:2,&quot;colNames&quot;:[&quot;duration_Arr[0] (#1)&quot;,&quot;duration_Arr[0] (#1)_1&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;],&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (integer)&quot;],&quot;maxValues&quot;:[&quot;9&quot;,1793.0],&quot;hiddenColumns&quot;:[],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;numRows&quot;:15,&quot;containsMissingValues&quot;:[false,false],&quot;colorModels&quot;:[],&quot;possibleValues&quot;:[[&quot;2&quot;,&quot;1&quot;,&quot;9&quot;,&quot;4&quot;,&quot;5&quot;,&quot;3&quot;,&quot;6&quot;,&quot;7&quot;,&quot;10&quot;,&quot;8&quot;,&quot;17&quot;,&quot;13&quot;,&quot;15&quot;,&quot;12&quot;,&quot;11&quot;],null],&quot;filterIds&quot;:[null,null]},&quot;fragmentFirstRowIndex&quot;:0,&quot;totalFilteredRows&quot;:0},&quot;translator&quot;:{&quot;sourceID&quot;:null,&quot;targetIDs&quot;:null,&quot;mapping&quot;:{&quot;Row14&quot;:[&quot;Row6456&quot;,&quot;Row6795&quot;],&quot;Row13&quot;:[&quot;Row4964&quot;,&quot;Row5412&quot;],&quot;Row12&quot;:[&quot;Row2423&quot;,&quot;Row4798&quot;],&quot;Row11&quot;:[&quot;Row7847&quot;,&quot;Row1354&quot;,&quot;Row4220&quot;],&quot;Row10&quot;:[&quot;Row548&quot;],&quot;Row0&quot;:[&quot;Row3489&quot;,&quot;Row5428&quot;,&quot;Row370&quot;,&quot;Row5425&quot;,&quot;Row3128&quot;,&quot;Row1186&quot;,&quot;Row5422&quot;,&quot;Row6750&quot;,&quot;Row6871&quot;,&quot;Row499&quot;,&quot;Row2394&quot;,&quot;Row3120&quot;,&quot;Row3241&quot;,&quot;Row1180&quot;,&quot;Row4226&quot;,&quot;Row6889&quot;,&quot;Row4469&quot;,&quot;Row5558&quot;,&quot;Row3013&quot;,&quot;Row5555&quot;,&quot;Row263&quot;,&quot;Row2047&quot;,&quot;Row6763&quot;,&quot;Row5672&quot;,&quot;Row2040&quot;,&quot;Row7850&quot;,&quot;Row269&quot;,&quot;Row2008&quot;,&quot;Row3339&quot;,&quot;Row3589&quot;,&quot;Row7705&quot;,&quot;Row2378&quot;,&quot;Row5406&quot;,&quot;Row3106&quot;,&quot;Row3103&quot;,&quot;Row3344&quot;,&quot;Row4674&quot;,&quot;Row3581&quot;,&quot;Row4430&quot;,&quot;Row3341&quot;,&quot;Row478&quot;,&quot;Row8803&quot;,&quot;Row5658&quot;,&quot;Row5538&quot;,&quot;Row6868&quot;,&quot;Row5414&quot;,&quot;Row4326&quot;,&quot;Row4202&quot;,&quot;Row5654&quot;,&quot;Row4200&quot;,&quot;Row2145&quot;,&quot;Row3355&quot;,&quot;Row3597&quot;,&quot;Row1051&quot;,&quot;Row4320&quot;,&quot;Row2383&quot;,&quot;Row3230&quot;,&quot;Row2229&quot;,&quot;Row4407&quot;,&quot;Row4778&quot;,&quot;Row5867&quot;,&quot;Row3687&quot;,&quot;Row4658&quot;,&quot;Row1148&quot;,&quot;Row2238&quot;,&quot;Row2359&quot;,&quot;Row4655&quot;,&quot;Row4776&quot;,&quot;Row4777&quot;,&quot;Row3684&quot;,&quot;Row7800&quot;,&quot;Row2352&quot;,&quot;Row3562&quot;,&quot;Row6951&quot;,&quot;Row4650&quot;,&quot;Row4771&quot;,&quot;Row1383&quot;,&quot;Row3208&quot;,&quot;Row2118&quot;,&quot;Row3449&quot;,&quot;Row3336&quot;,&quot;Row2125&quot;,&quot;Row6724&quot;,&quot;Row2006&quot;,&quot;Row5514&quot;,&quot;Row2122&quot;,&quot;Row5753&quot;,&quot;Row6963&quot;,&quot;Row1277&quot;,&quot;Row2002&quot;,&quot;Row3212&quot;,&quot;Row3333&quot;,&quot;Row3454&quot;,&quot;Row189&quot;,&quot;Row2480&quot;,&quot;Row2362&quot;,&quot;Row3692&quot;,&quot;Row4780&quot;,&quot;Row5836&quot;,&quot;Row2698&quot;,&quot;Row3787&quot;,&quot;Row1004&quot;,&quot;Row1125&quot;,&quot;Row4636&quot;,&quot;Row1489&quot;,&quot;Row1127&quot;,&quot;Row3304&quot;,&quot;Row3667&quot;,&quot;Row5723&quot;,&quot;Row153&quot;,&quot;Row1363&quot;,&quot;Row4511&quot;,&quot;Row276&quot;,&quot;Row1123&quot;,&quot;Row1365&quot;,&quot;Row3784&quot;,&quot;Row1129&quot;,&quot;Row3306&quot;,&quot;Row4879&quot;,&quot;Row4638&quot;,&quot;Row2346&quot;,&quot;Row5856&quot;,&quot;Row3558&quot;,&quot;Row3799&quot;,&quot;Row5855&quot;,&quot;Row6822&quot;,&quot;Row3430&quot;,&quot;Row4764&quot;,&quot;Row286&quot;,&quot;Row1012&quot;,&quot;Row1375&quot;,&quot;Row3433&quot;,&quot;Row2461&quot;,&quot;Row49&quot;,&quot;Row2669&quot;,&quot;Row6906&quot;,&quot;Row1338&quot;,&quot;Row1465&quot;,&quot;Row4976&quot;,&quot;Row2554&quot;,&quot;Row2675&quot;,&quot;Row3401&quot;,&quot;Row2557&quot;,&quot;Row2551&quot;,&quot;Row3640&quot;,&quot;Row2552&quot;,&quot;Row1460&quot;,&quot;Row3406&quot;,&quot;Row5827&quot;,&quot;Row4503&quot;,&quot;Row5834&quot;,&quot;Row2444&quot;,&quot;Row4622&quot;,&quot;Row4743&quot;,&quot;Row6922&quot;,&quot;Row3414&quot;,&quot;Row4744&quot;,&quot;Row1352&quot;,&quot;Row3410&quot;,&quot;Row1350&quot;,&quot;Row2529&quot;,&quot;Row3736&quot;,&quot;Row2774&quot;,&quot;Row3624&quot;,&quot;Row3986&quot;,&quot;Row3861&quot;,&quot;Row8070&quot;,&quot;Row8193&quot;,&quot;Row5807&quot;,&quot;Row3504&quot;,&quot;Row3746&quot;,&quot;Row4838&quot;,&quot;Row1449&quot;,&quot;Row3748&quot;,&quot;Row4957&quot;,&quot;Row1696&quot;,&quot;Row3633&quot;,&quot;Row1697&quot;,&quot;Row2785&quot;,&quot;Row6901&quot;,&quot;Row2788&quot;,&quot;Row2787&quot;,&quot;Row1692&quot;,&quot;Row1572&quot;,&quot;Row3870&quot;,&quot;Row1210&quot;,&quot;Row1332&quot;,&quot;Row3751&quot;,&quot;Row3838&quot;,&quot;Row1778&quot;,&quot;Row2748&quot;,&quot;Row3716&quot;,&quot;Row2868&quot;,&quot;Row2874&quot;,&quot;Row3721&quot;,&quot;Row1&quot;,&quot;Row1543&quot;,&quot;Row3723&quot;,&quot;Row4930&quot;,&quot;Row1545&quot;,&quot;Row3722&quot;,&quot;Row2992&quot;,&quot;Row4&quot;,&quot;Row7085&quot;,&quot;Row1546&quot;,&quot;Row1547&quot;,&quot;Row2998&quot;,&quot;Row1548&quot;,&quot;Row3727&quot;,&quot;Row5902&quot;,&quot;Row3726&quot;,&quot;Row1432&quot;,&quot;Row2764&quot;,&quot;Row1555&quot;,&quot;Row1314&quot;,&quot;Row4821&quot;,&quot;Row1551&quot;,&quot;Row2640&quot;,&quot;Row3971&quot;,&quot;Row8180&quot;,&quot;Row7098&quot;,&quot;Row8182&quot;,&quot;Row3817&quot;,&quot;Row3937&quot;,&quot;Row4908&quot;,&quot;Row25&quot;,&quot;Row1516&quot;,&quot;Row1758&quot;,&quot;Row1641&quot;,&quot;Row2611&quot;,&quot;Row3700&quot;,&quot;Row2971&quot;,&quot;Row17&quot;,&quot;Row8271&quot;,&quot;Row1649&quot;,&quot;Row3707&quot;,&quot;Row2976&quot;,&quot;Row3705&quot;,&quot;Row1527&quot;,&quot;Row1769&quot;,&quot;Row2742&quot;,&quot;Row7196&quot;,&quot;Row923&quot;,&quot;Row925&quot;,&quot;Row927&quot;,&quot;Row8257&quot;,&quot;Row2708&quot;,&quot;Row2825&quot;,&quot;Row1615&quot;,&quot;Row2710&quot;,&quot;Row6079&quot;,&quot;Row8020&quot;,&quot;Row7050&quot;,&quot;Row8147&quot;,&quot;Row1506&quot;,&quot;Row2838&quot;,&quot;Row3806&quot;,&quot;Row3807&quot;,&quot;Row1746&quot;,&quot;Row1993&quot;,&quot;Row1991&quot;,&quot;Row5082&quot;,&quot;Row2926&quot;,&quot;Row2921&quot;,&quot;Row7029&quot;,&quot;Row7148&quot;,&quot;Row6177&quot;,&quot;Row911&quot;,&quot;Row8366&quot;,&quot;Row1605&quot;,&quot;Row2937&quot;,&quot;Row2938&quot;,&quot;Row3902&quot;,&quot;Row1852&quot;,&quot;Row2821&quot;,&quot;Row1611&quot;,&quot;Row6066&quot;,&quot;Row7033&quot;,&quot;Row920&quot;,&quot;Row4090&quot;,&quot;Row87&quot;,&quot;Row5069&quot;,&quot;Row7125&quot;,&quot;Row7123&quot;,&quot;Row731&quot;,&quot;Row733&quot;,&quot;Row734&quot;,&quot;Row6393&quot;,&quot;Row8690&quot;,&quot;Row74&quot;,&quot;Row857&quot;,&quot;Row1828&quot;,&quot;Row862&quot;,&quot;Row503&quot;,&quot;Row825&quot;,&quot;Row8795&quot;,&quot;Row8796&quot;,&quot;Row8315&quot;,&quot;Row8679&quot;,&quot;Row7586&quot;,&quot;Row831&quot;,&quot;Row6373&quot;,&quot;Row837&quot;,&quot;Row92&quot;,&quot;Row97&quot;,&quot;Row4089&quot;,&quot;Row5178&quot;,&quot;Row5175&quot;,&quot;Row6265&quot;,&quot;Row720&quot;,&quot;Row963&quot;,&quot;Row5174&quot;,&quot;Row527&quot;,&quot;Row648&quot;,&quot;Row5027&quot;,&quot;Row4178&quot;,&quot;Row530&quot;,&quot;Row772&quot;,&quot;Row3086&quot;,&quot;Row4055&quot;,&quot;Row3085&quot;,&quot;Row4296&quot;,&quot;Row535&quot;,&quot;Row657&quot;,&quot;Row538&quot;,&quot;Row539&quot;,&quot;Row1908&quot;,&quot;Row8423&quot;,&quot;Row8669&quot;,&quot;Row7217&quot;,&quot;Row780&quot;,&quot;Row7457&quot;,&quot;Row3096&quot;,&quot;Row543&quot;,&quot;Row664&quot;,&quot;Row5032&quot;,&quot;Row665&quot;,&quot;Row7331&quot;,&quot;Row5272&quot;,&quot;Row6361&quot;,&quot;Row869&quot;,&quot;Row749&quot;,&quot;Row8518&quot;,&quot;Row7307&quot;,&quot;Row4279&quot;,&quot;Row2099&quot;,&quot;Row6457&quot;,&quot;Row5243&quot;,&quot;Row751&quot;,&quot;Row5365&quot;,&quot;Row510&quot;,&quot;Row3066&quot;,&quot;Row511&quot;,&quot;Row6451&quot;,&quot;Row6572&quot;,&quot;Row3183&quot;,&quot;Row515&quot;,&quot;Row4270&quot;,&quot;Row516&quot;,&quot;Row758&quot;,&quot;Row517&quot;,&quot;Row519&quot;,&quot;Row8644&quot;,&quot;Row8646&quot;,&quot;Row5258&quot;,&quot;Row3199&quot;,&quot;Row520&quot;,&quot;Row883&quot;,&quot;Row6101&quot;,&quot;Row642&quot;,&quot;Row401&quot;,&quot;Row4043&quot;,&quot;Row403&quot;,&quot;Row524&quot;,&quot;Row6460&quot;,&quot;Row7529&quot;,&quot;Row3288&quot;,&quot;Row6678&quot;,&quot;Row7646&quot;,&quot;Row4014&quot;,&quot;Row453&quot;,&quot;Row7521&quot;,&quot;Row212&quot;,&quot;Row696&quot;,&quot;Row3283&quot;,&quot;Row4494&quot;,&quot;Row2190&quot;,&quot;Row459&quot;,&quot;Row7409&quot;,&quot;Row5119&quot;,&quot;Row3298&quot;,&quot;Row100&quot;,&quot;Row3174&quot;,&quot;Row5232&quot;,&quot;Row4141&quot;,&quot;Row104&quot;,&quot;Row4384&quot;,&quot;Row6560&quot;,&quot;Row2080&quot;,&quot;Row8712&quot;,&quot;Row4119&quot;,&quot;Row5208&quot;,&quot;Row4116&quot;,&quot;Row4479&quot;,&quot;Row4359&quot;,&quot;Row5445&quot;,&quot;Row7502&quot;,&quot;Row3146&quot;,&quot;Row6894&quot;,&quot;Row311&quot;,&quot;Row553&quot;,&quot;Row674&quot;,&quot;Row2292&quot;,&quot;Row8600&quot;,&quot;Row3039&quot;,&quot;Row4367&quot;,&quot;Row4368&quot;,&quot;Row6301&quot;,&quot;Row2062&quot;,&quot;Row686&quot;,&quot;Row3275&quot;,&quot;Row5692&quot;,&quot;Row3271&quot;,&quot;Row1093&quot;,&quot;Row2181&quot;],&quot;Row1&quot;:[&quot;Row3249&quot;,&quot;Row2396&quot;,&quot;Row3243&quot;,&quot;Row1067&quot;,&quot;Row1068&quot;,&quot;Row3245&quot;,&quot;Row376&quot;,&quot;Row1061&quot;,&quot;Row1062&quot;,&quot;Row1063&quot;,&quot;Row3242&quot;,&quot;Row4570&quot;,&quot;Row379&quot;,&quot;Row1064&quot;,&quot;Row1060&quot;,&quot;Row5438&quot;,&quot;Row3258&quot;,&quot;Row5439&quot;,&quot;Row381&quot;,&quot;Row4105&quot;,&quot;Row5436&quot;,&quot;Row5437&quot;,&quot;Row3255&quot;,&quot;Row5434&quot;,&quot;Row4104&quot;,&quot;Row5435&quot;,&quot;Row3257&quot;,&quot;Row1079&quot;,&quot;Row5433&quot;,&quot;Row388&quot;,&quot;Row1075&quot;,&quot;Row3252&quot;,&quot;Row3219&quot;,&quot;Row4549&quot;,&quot;Row6728&quot;,&quot;Row1047&quot;,&quot;Row5405&quot;,&quot;Row1049&quot;,&quot;Row5403&quot;,&quot;Row5404&quot;,&quot;Row3222&quot;,&quot;Row5401&quot;,&quot;Row5885&quot;,&quot;Row1044&quot;,&quot;Row3221&quot;,&quot;Row6732&quot;,&quot;Row1045&quot;,&quot;Row6731&quot;,&quot;Row4553&quot;,&quot;Row4550&quot;,&quot;Row1040&quot;,&quot;Row5882&quot;,&quot;Row3220&quot;,&quot;Row1042&quot;,&quot;Row5409&quot;,&quot;Row5407&quot;,&quot;Row1058&quot;,&quot;Row3236&quot;,&quot;Row3238&quot;,&quot;Row6744&quot;,&quot;Row3232&quot;,&quot;Row5413&quot;,&quot;Row1056&quot;,&quot;Row5410&quot;,&quot;Row364&quot;,&quot;Row1057&quot;,&quot;Row5895&quot;,&quot;Row6741&quot;,&quot;Row368&quot;,&quot;Row369&quot;,&quot;Row6709&quot;,&quot;Row4529&quot;,&quot;Row2349&quot;,&quot;Row1025&quot;,&quot;Row2357&quot;,&quot;Row3204&quot;,&quot;Row3688&quot;,&quot;Row4536&quot;,&quot;Row6714&quot;,&quot;Row3689&quot;,&quot;Row4535&quot;,&quot;Row5866&quot;,&quot;Row5863&quot;,&quot;Row3686&quot;,&quot;Row4530&quot;,&quot;Row4531&quot;,&quot;Row5862&quot;,&quot;Row3682&quot;,&quot;Row6718&quot;,&quot;Row6717&quot;,&quot;Row1038&quot;,&quot;Row3216&quot;,&quot;Row5877&quot;,&quot;Row1032&quot;,&quot;Row3695&quot;,&quot;Row3694&quot;,&quot;Row3696&quot;,&quot;Row4542&quot;,&quot;Row3691&quot;,&quot;Row5870&quot;,&quot;Row3690&quot;,&quot;Row5871&quot;,&quot;Row5838&quot;,&quot;Row4508&quot;,&quot;Row2329&quot;,&quot;Row1003&quot;,&quot;Row1487&quot;,&quot;Row3666&quot;,&quot;Row4514&quot;,&quot;Row5845&quot;,&quot;Row3665&quot;,&quot;Row2337&quot;,&quot;Row5843&quot;,&quot;Row4997&quot;,&quot;Row5844&quot;,&quot;Row1483&quot;,&quot;Row2331&quot;,&quot;Row4994&quot;,&quot;Row3664&quot;,&quot;Row4992&quot;,&quot;Row397&quot;,&quot;Row3663&quot;,&quot;Row399&quot;,&quot;Row4991&quot;,&quot;Row3660&quot;,&quot;Row1482&quot;,&quot;Row4518&quot;,&quot;Row4517&quot;,&quot;Row3677&quot;,&quot;Row4523&quot;,&quot;Row3673&quot;,&quot;Row4521&quot;,&quot;Row5853&quot;,&quot;Row2343&quot;,&quot;Row3674&quot;,&quot;Row4520&quot;,&quot;Row1492&quot;,&quot;Row3671&quot;,&quot;Row8097&quot;,&quot;Row2306&quot;,&quot;Row2305&quot;,&quot;Row3636&quot;,&quot;Row4967&quot;,&quot;Row2307&quot;,&quot;Row4968&quot;,&quot;Row2313&quot;,&quot;Row2797&quot;,&quot;Row5823&quot;,&quot;Row5822&quot;,&quot;Row2793&quot;,&quot;Row1462&quot;,&quot;Row2792&quot;,&quot;Row4973&quot;,&quot;Row1463&quot;,&quot;Row2795&quot;,&quot;Row3642&quot;,&quot;Row2794&quot;,&quot;Row2791&quot;,&quot;Row8093&quot;,&quot;Row8094&quot;,&quot;Row4978&quot;,&quot;Row5825&quot;,&quot;Row2318&quot;,&quot;Row1476&quot;,&quot;Row3655&quot;,&quot;Row1477&quot;,&quot;Row4988&quot;,&quot;Row1478&quot;,&quot;Row4501&quot;,&quot;Row4985&quot;,&quot;Row1479&quot;,&quot;Row3656&quot;,&quot;Row2320&quot;,&quot;Row3651&quot;,&quot;Row4984&quot;,&quot;Row2322&quot;,&quot;Row4980&quot;,&quot;Row4949&quot;,&quot;Row3615&quot;,&quot;Row1437&quot;,&quot;Row3614&quot;,&quot;Row1439&quot;,&quot;Row1443&quot;,&quot;Row5801&quot;,&quot;Row5802&quot;,&quot;Row2777&quot;,&quot;Row5800&quot;,&quot;Row4951&quot;,&quot;Row1442&quot;,&quot;Row2772&quot;,&quot;Row5805&quot;,&quot;Row5806&quot;,&quot;Row3627&quot;,&quot;Row1455&quot;,&quot;Row2301&quot;,&quot;Row3632&quot;,&quot;Row1457&quot;,&quot;Row2303&quot;,&quot;Row5811&quot;,&quot;Row4961&quot;,&quot;Row2784&quot;,&quot;Row2783&quot;,&quot;Row8083&quot;,&quot;Row8085&quot;,&quot;Row8058&quot;,&quot;Row4925&quot;,&quot;Row4926&quot;,&quot;Row1416&quot;,&quot;Row4924&quot;,&quot;Row2752&quot;,&quot;Row4933&quot;,&quot;Row2751&quot;,&quot;Row1429&quot;,&quot;Row3607&quot;,&quot;Row3609&quot;,&quot;Row3604&quot;,&quot;Row2759&quot;,&quot;Row3606&quot;,&quot;Row3605&quot;,&quot;Row3611&quot;,&quot;Row3610&quot;,&quot;Row3613&quot;,&quot;Row4941&quot;,&quot;Row2765&quot;,&quot;Row3612&quot;,&quot;Row1430&quot;,&quot;Row2761&quot;,&quot;Row8062&quot;,&quot;Row8031&quot;,&quot;Row7182&quot;,&quot;Row2727&quot;,&quot;Row4906&quot;,&quot;Row4903&quot;,&quot;Row1877&quot;,&quot;Row4910&quot;,&quot;Row1400&quot;,&quot;Row1885&quot;,&quot;Row1880&quot;,&quot;Row7187&quot;,&quot;Row7185&quot;,&quot;Row7184&quot;,&quot;Row4914&quot;,&quot;Row1889&quot;,&quot;Row4913&quot;,&quot;Row1894&quot;,&quot;Row2743&quot;,&quot;Row1890&quot;,&quot;Row1893&quot;,&quot;Row8040&quot;,&quot;Row8132&quot;,&quot;Row8137&quot;,&quot;Row1979&quot;,&quot;Row2827&quot;,&quot;Row1978&quot;,&quot;Row2824&quot;,&quot;Row1983&quot;,&quot;Row7288&quot;,&quot;Row7285&quot;,&quot;Row7291&quot;,&quot;Row8143&quot;,&quot;Row8148&quot;,&quot;Row1508&quot;,&quot;Row1503&quot;,&quot;Row1988&quot;,&quot;Row1505&quot;,&quot;Row2841&quot;,&quot;Row1994&quot;,&quot;Row1990&quot;,&quot;Row7297&quot;,&quot;Row700&quot;,&quot;Row8592&quot;,&quot;Row8593&quot;,&quot;Row8596&quot;,&quot;Row2808&quot;,&quot;Row2804&quot;,&quot;Row8117&quot;,&quot;Row2807&quot;,&quot;Row1954&quot;,&quot;Row1955&quot;,&quot;Row2802&quot;,&quot;Row1961&quot;,&quot;Row5089&quot;,&quot;Row7268&quot;,&quot;Row7264&quot;,&quot;Row5092&quot;,&quot;Row8121&quot;,&quot;Row2816&quot;,&quot;Row2818&quot;,&quot;Row8129&quot;,&quot;Row2813&quot;,&quot;Row1973&quot;,&quot;Row7279&quot;,&quot;Row5098&quot;,&quot;Row5099&quot;,&quot;Row5095&quot;,&quot;Row725&quot;,&quot;Row726&quot;,&quot;Row8574&quot;,&quot;Row8575&quot;,&quot;Row6398&quot;,&quot;Row7245&quot;,&quot;Row5065&quot;,&quot;Row5070&quot;,&quot;Row737&quot;,&quot;Row8102&quot;,&quot;Row8588&quot;,&quot;Row1947&quot;,&quot;Row8107&quot;,&quot;Row8109&quot;,&quot;Row1951&quot;,&quot;Row7258&quot;,&quot;Row7257&quot;,&quot;Row7256&quot;,&quot;Row7255&quot;,&quot;Row5077&quot;,&quot;Row744&quot;,&quot;Row5075&quot;,&quot;Row706&quot;,&quot;Row8551&quot;,&quot;Row707&quot;,&quot;Row1917&quot;,&quot;Row1914&quot;,&quot;Row1915&quot;,&quot;Row1910&quot;,&quot;Row5048&quot;,&quot;Row6378&quot;,&quot;Row4199&quot;,&quot;Row5046&quot;,&quot;Row4196&quot;,&quot;Row7222&quot;,&quot;Row710&quot;,&quot;Row6371&quot;,&quot;Row713&quot;,&quot;Row714&quot;,&quot;Row715&quot;,&quot;Row8560&quot;,&quot;Row719&quot;,&quot;Row8567&quot;,&quot;Row1925&quot;,&quot;Row1923&quot;,&quot;Row6389&quot;,&quot;Row7235&quot;,&quot;Row5057&quot;,&quot;Row6385&quot;,&quot;Row723&quot;,&quot;Row6381&quot;,&quot;Row8533&quot;,&quot;Row7209&quot;,&quot;Row5029&quot;,&quot;Row7689&quot;,&quot;Row6357&quot;,&quot;Row771&quot;,&quot;Row4179&quot;,&quot;Row5026&quot;,&quot;Row4174&quot;,&quot;Row4172&quot;,&quot;Row778&quot;,&quot;Row4171&quot;,&quot;Row1906&quot;,&quot;Row1907&quot;,&quot;Row8544&quot;,&quot;Row8545&quot;,&quot;Row8549&quot;,&quot;Row5038&quot;,&quot;Row4189&quot;,&quot;Row5036&quot;,&quot;Row7215&quot;,&quot;Row7214&quot;,&quot;Row7698&quot;,&quot;Row6364&quot;,&quot;Row5030&quot;,&quot;Row7693&quot;,&quot;Row4184&quot;,&quot;Row6360&quot;,&quot;Row748&quot;,&quot;Row8519&quot;,&quot;Row6335&quot;,&quot;Row7666&quot;,&quot;Row5004&quot;,&quot;Row5488&quot;,&quot;Row753&quot;,&quot;Row5000&quot;,&quot;Row8523&quot;,&quot;Row6347&quot;,&quot;Row4168&quot;,&quot;Row761&quot;,&quot;Row7675&quot;,&quot;Row4166&quot;,&quot;Row7674&quot;,&quot;Row763&quot;,&quot;Row6341&quot;,&quot;Row7671&quot;,&quot;Row4162&quot;,&quot;Row767&quot;,&quot;Row6319&quot;,&quot;Row7649&quot;,&quot;Row7648&quot;,&quot;Row3287&quot;,&quot;Row5465&quot;,&quot;Row331&quot;,&quot;Row3284&quot;,&quot;Row4132&quot;,&quot;Row5464&quot;,&quot;Row3286&quot;,&quot;Row4130&quot;,&quot;Row7640&quot;,&quot;Row4131&quot;,&quot;Row6791&quot;,&quot;Row3281&quot;,&quot;Row8503&quot;,&quot;Row4149&quot;,&quot;Row5479&quot;,&quot;Row5477&quot;,&quot;Row6323&quot;,&quot;Row3295&quot;,&quot;Row4143&quot;,&quot;Row3294&quot;,&quot;Row4144&quot;,&quot;Row4142&quot;,&quot;Row3291&quot;,&quot;Row4109&quot;,&quot;Row4118&quot;,&quot;Row3269&quot;,&quot;Row7627&quot;,&quot;Row7624&quot;,&quot;Row7623&quot;,&quot;Row5444&quot;,&quot;Row6774&quot;,&quot;Row310&quot;,&quot;Row6773&quot;,&quot;Row1084&quot;,&quot;Row4111&quot;,&quot;Row312&quot;,&quot;Row313&quot;,&quot;Row3263&quot;,&quot;Row6770&quot;,&quot;Row316&quot;,&quot;Row1082&quot;,&quot;Row319&quot;,&quot;Row7629&quot;,&quot;Row4129&quot;,&quot;Row4127&quot;,&quot;Row5458&quot;,&quot;Row3277&quot;,&quot;Row4125&quot;,&quot;Row6788&quot;,&quot;Row3276&quot;,&quot;Row4126&quot;,&quot;Row5457&quot;,&quot;Row3279&quot;,&quot;Row320&quot;,&quot;Row6785&quot;,&quot;Row7632&quot;,&quot;Row321&quot;,&quot;Row1094&quot;,&quot;Row322&quot;,&quot;Row1095&quot;,&quot;Row6782&quot;,&quot;Row3274&quot;,&quot;Row1091&quot;,&quot;Row3270&quot;,&quot;Row3119&quot;,&quot;Row3127&quot;,&quot;Row490&quot;,&quot;Row7968&quot;,&quot;Row3129&quot;,&quot;Row6635&quot;,&quot;Row493&quot;,&quot;Row2275&quot;,&quot;Row3122&quot;,&quot;Row5301&quot;,&quot;Row497&quot;,&quot;Row3121&quot;,&quot;Row5781&quot;,&quot;Row3137&quot;,&quot;Row5799&quot;,&quot;Row6646&quot;,&quot;Row3130&quot;,&quot;Row4461&quot;,&quot;Row5759&quot;,&quot;Row2258&quot;,&quot;Row5768&quot;,&quot;Row3588&quot;,&quot;Row5769&quot;,&quot;Row5766&quot;,&quot;Row6613&quot;,&quot;Row3585&quot;,&quot;Row472&quot;,&quot;Row2253&quot;,&quot;Row6611&quot;,&quot;Row7942&quot;,&quot;Row3587&quot;,&quot;Row5762&quot;,&quot;Row2255&quot;,&quot;Row5763&quot;,&quot;Row2251&quot;,&quot;Row8800&quot;,&quot;Row6618&quot;,&quot;Row7948&quot;,&quot;Row5777&quot;,&quot;Row3117&quot;,&quot;Row482&quot;,&quot;Row3111&quot;,&quot;Row3598&quot;,&quot;Row5774&quot;,&quot;Row3592&quot;,&quot;Row5771&quot;,&quot;Row487&quot;,&quot;Row3590&quot;,&quot;Row4408&quot;,&quot;Row7918&quot;,&quot;Row4409&quot;,&quot;Row4406&quot;,&quot;Row4415&quot;,&quot;Row2235&quot;,&quot;Row5744&quot;,&quot;Row2237&quot;,&quot;Row4898&quot;,&quot;Row1385&quot;,&quot;Row4410&quot;,&quot;Row5741&quot;,&quot;Row1380&quot;,&quot;Row2230&quot;,&quot;Row3578&quot;,&quot;Row2246&quot;,&quot;Row3577&quot;,&quot;Row2249&quot;,&quot;Row3579&quot;,&quot;Row6601&quot;,&quot;Row2245&quot;,&quot;Row3576&quot;,&quot;Row5751&quot;,&quot;Row3575&quot;,&quot;Row5752&quot;,&quot;Row1392&quot;,&quot;Row2241&quot;,&quot;Row1394&quot;,&quot;Row3571&quot;,&quot;Row5715&quot;,&quot;Row3539&quot;,&quot;Row4869&quot;,&quot;Row5716&quot;,&quot;Row2214&quot;,&quot;Row5722&quot;,&quot;Row2699&quot;,&quot;Row3546&quot;,&quot;Row5720&quot;,&quot;Row4874&quot;,&quot;Row2212&quot;,&quot;Row2696&quot;,&quot;Row3543&quot;,&quot;Row1360&quot;,&quot;Row1361&quot;,&quot;Row2691&quot;,&quot;Row7908&quot;,&quot;Row5728&quot;,&quot;Row2217&quot;,&quot;Row5729&quot;,&quot;Row5727&quot;,&quot;Row2225&quot;,&quot;Row4405&quot;,&quot;Row2227&quot;,&quot;Row2226&quot;,&quot;Row4403&quot;,&quot;Row1373&quot;,&quot;Row3552&quot;,&quot;Row4400&quot;,&quot;Row5731&quot;,&quot;Row3551&quot;,&quot;Row5732&quot;,&quot;Row2223&quot;,&quot;Row2222&quot;,&quot;Row5730&quot;,&quot;Row1371&quot;,&quot;Row3550&quot;,&quot;Row40&quot;,&quot;Row3519&quot;,&quot;Row47&quot;,&quot;Row4848&quot;,&quot;Row3515&quot;,&quot;Row1339&quot;,&quot;Row4846&quot;,&quot;Row4856&quot;,&quot;Row5703&quot;,&quot;Row3525&quot;,&quot;Row4853&quot;,&quot;Row5700&quot;,&quot;Row3524&quot;,&quot;Row3521&quot;,&quot;Row2670&quot;,&quot;Row37&quot;,&quot;Row34&quot;,&quot;Row1348&quot;,&quot;Row3527&quot;,&quot;Row33&quot;,&quot;Row1349&quot;,&quot;Row3526&quot;,&quot;Row5707&quot;,&quot;Row31&quot;,&quot;Row1355&quot;,&quot;Row3534&quot;,&quot;Row1356&quot;,&quot;Row4867&quot;,&quot;Row4862&quot;,&quot;Row2684&quot;,&quot;Row69&quot;,&quot;Row1799&quot;,&quot;Row66&quot;,&quot;Row1317&quot;,&quot;Row4824&quot;,&quot;Row3979&quot;,&quot;Row3501&quot;,&quot;Row3984&quot;,&quot;Row3503&quot;,&quot;Row4831&quot;,&quot;Row3502&quot;,&quot;Row4832&quot;,&quot;Row3981&quot;,&quot;Row3980&quot;,&quot;Row1320&quot;,&quot;Row1321&quot;,&quot;Row2651&quot;,&quot;Row50&quot;,&quot;Row3505&quot;,&quot;Row3989&quot;,&quot;Row2657&quot;,&quot;Row3988&quot;,&quot;Row1328&quot;,&quot;Row2659&quot;,&quot;Row3506&quot;,&quot;Row4836&quot;,&quot;Row2665&quot;,&quot;Row3996&quot;,&quot;Row2664&quot;,&quot;Row3998&quot;,&quot;Row2666&quot;,&quot;Row2661&quot;,&quot;Row2660&quot;,&quot;Row4841&quot;,&quot;Row1331&quot;,&quot;Row3510&quot;,&quot;Row2662&quot;,&quot;Row7083&quot;,&quot;Row7082&quot;,&quot;Row7081&quot;,&quot;Row7080&quot;,&quot;Row4809&quot;,&quot;Row4807&quot;,&quot;Row3956&quot;,&quot;Row4804&quot;,&quot;Row2627&quot;,&quot;Row3958&quot;,&quot;Row1300&quot;,&quot;Row1301&quot;,&quot;Row2631&quot;,&quot;Row3964&quot;,&quot;Row3961&quot;,&quot;Row5&quot;,&quot;Row2&quot;,&quot;Row3&quot;,&quot;Row2639&quot;,&quot;Row4818&quot;,&quot;Row4815&quot;,&quot;Row3969&quot;,&quot;Row4813&quot;,&quot;Row3968&quot;,&quot;Row2643&quot;,&quot;Row1313&quot;,&quot;Row2645&quot;,&quot;Row3976&quot;,&quot;Row2641&quot;,&quot;Row1310&quot;,&quot;Row1794&quot;,&quot;Row1790&quot;,&quot;Row900&quot;,&quot;Row8397&quot;,&quot;Row3938&quot;,&quot;Row2606&quot;,&quot;Row2609&quot;,&quot;Row2603&quot;,&quot;Row3934&quot;,&quot;Row1756&quot;,&quot;Row2602&quot;,&quot;Row1757&quot;,&quot;Row20&quot;,&quot;Row3941&quot;,&quot;Row3940&quot;,&quot;Row19&quot;,&quot;Row1760&quot;,&quot;Row7069&quot;,&quot;Row8392&quot;,&quot;Row3949&quot;,&quot;Row14&quot;,&quot;Row1766&quot;,&quot;Row11&quot;,&quot;Row3944&quot;,&quot;Row10&quot;,&quot;Row3946&quot;,&quot;Row1773&quot;,&quot;Row3953&quot;,&quot;Row1771&quot;,&quot;Row803&quot;,&quot;Row805&quot;,&quot;Row8015&quot;,&quot;Row1854&quot;,&quot;Row1860&quot;,&quot;Row8490&quot;,&quot;Row813&quot;,&quot;Row8021&quot;,&quot;Row1868&quot;,&quot;Row1873&quot;,&quot;Row4900&quot;,&quot;Row1875&quot;,&quot;Row7177&quot;,&quot;Row7176&quot;,&quot;Row7175&quot;,&quot;Row8471&quot;,&quot;Row6291&quot;,&quot;Row8474&quot;,&quot;Row8476&quot;,&quot;Row1837&quot;,&quot;Row1839&quot;,&quot;Row1834&quot;,&quot;Row1840&quot;,&quot;Row7143&quot;,&quot;Row6295&quot;,&quot;Row7142&quot;,&quot;Row6294&quot;,&quot;Row7140&quot;,&quot;Row8482&quot;,&quot;Row7157&quot;,&quot;Row7155&quot;,&quot;Row85&quot;,&quot;Row847&quot;,&quot;Row83&quot;,&quot;Row7129&quot;,&quot;Row6276&quot;,&quot;Row6275&quot;,&quot;Row7120&quot;,&quot;Row6281&quot;,&quot;Row70&quot;,&quot;Row76&quot;,&quot;Row7131&quot;,&quot;Row8431&quot;,&quot;Row8437&quot;,&quot;Row8439&quot;,&quot;Row4079&quot;,&quot;Row6258&quot;,&quot;Row7589&quot;,&quot;Row7588&quot;,&quot;Row7101&quot;,&quot;Row6253&quot;,&quot;Row7100&quot;,&quot;Row6252&quot;,&quot;Row832&quot;,&quot;Row833&quot;,&quot;Row835&quot;,&quot;Row1803&quot;,&quot;Row1804&quot;,&quot;Row99&quot;,&quot;Row1800&quot;,&quot;Row98&quot;,&quot;Row7597&quot;,&quot;Row7112&quot;,&quot;Row842&quot;,&quot;Row6263&quot;,&quot;Row6262&quot;,&quot;Row7593&quot;,&quot;Row8411&quot;,&quot;Row7569&quot;,&quot;Row7568&quot;,&quot;Row4057&quot;,&quot;Row5388&quot;,&quot;Row5386&quot;,&quot;Row4056&quot;,&quot;Row5384&quot;,&quot;Row896&quot;,&quot;Row4054&quot;,&quot;Row897&quot;,&quot;Row5382&quot;,&quot;Row5383&quot;,&quot;Row5390&quot;,&quot;Row8421&quot;,&quot;Row8428&quot;,&quot;Row8429&quot;,&quot;Row6249&quot;,&quot;Row5399&quot;,&quot;Row5397&quot;,&quot;Row7573&quot;,&quot;Row5393&quot;,&quot;Row7572&quot;,&quot;Row7571&quot;,&quot;Row5392&quot;,&quot;Row868&quot;,&quot;Row6219&quot;,&quot;Row6216&quot;,&quot;Row7547&quot;,&quot;Row4035&quot;,&quot;Row5366&quot;,&quot;Row5367&quot;,&quot;Row6697&quot;,&quot;Row3185&quot;,&quot;Row3184&quot;,&quot;Row6695&quot;,&quot;Row3187&quot;,&quot;Row5362&quot;,&quot;Row874&quot;,&quot;Row4032&quot;,&quot;Row6693&quot;,&quot;Row7540&quot;,&quot;Row5360&quot;,&quot;Row876&quot;,&quot;Row4030&quot;,&quot;Row6690&quot;,&quot;Row3182&quot;,&quot;Row879&quot;,&quot;Row6228&quot;,&quot;Row4044&quot;,&quot;Row400&quot;,&quot;Row884&quot;,&quot;Row4042&quot;,&quot;Row7551&quot;,&quot;Row886&quot;,&quot;Row5372&quot;,&quot;Row5348&quot;,&quot;Row5349&quot;,&quot;Row4015&quot;,&quot;Row4016&quot;,&quot;Row5347&quot;,&quot;Row6676&quot;,&quot;Row5345&quot;,&quot;Row6674&quot;,&quot;Row4012&quot;,&quot;Row6673&quot;,&quot;Row3165&quot;,&quot;Row6672&quot;,&quot;Row456&quot;,&quot;Row7538&quot;,&quot;Row4029&quot;,&quot;Row4026&quot;,&quot;Row3177&quot;,&quot;Row4027&quot;,&quot;Row5355&quot;,&quot;Row5356&quot;,&quot;Row4022&quot;,&quot;Row465&quot;,&quot;Row3173&quot;,&quot;Row4023&quot;,&quot;Row5354&quot;,&quot;Row466&quot;,&quot;Row3176&quot;,&quot;Row3175&quot;,&quot;Row5352&quot;,&quot;Row5350&quot;,&quot;Row6659&quot;,&quot;Row6658&quot;,&quot;Row7505&quot;,&quot;Row5327&quot;,&quot;Row7504&quot;,&quot;Row2298&quot;,&quot;Row5324&quot;,&quot;Row2297&quot;,&quot;Row4478&quot;,&quot;Row430&quot;,&quot;Row2299&quot;,&quot;Row4476&quot;,&quot;Row7984&quot;,&quot;Row431&quot;,&quot;Row6652&quot;,&quot;Row5321&quot;,&quot;Row6651&quot;,&quot;Row7982&quot;,&quot;Row434&quot;,&quot;Row435&quot;,&quot;Row4006&quot;,&quot;Row4488&quot;,&quot;Row4489&quot;,&quot;Row4487&quot;,&quot;Row442&quot;,&quot;Row6663&quot;,&quot;Row4001&quot;,&quot;Row7993&quot;,&quot;Row444&quot;,&quot;Row4483&quot;,&quot;Row6660&quot;,&quot;Row7991&quot;,&quot;Row6509&quot;,&quot;Row6508&quot;,&quot;Row6507&quot;,&quot;Row7838&quot;,&quot;Row5669&quot;,&quot;Row2158&quot;,&quot;Row3005&quot;,&quot;Row5667&quot;,&quot;Row5668&quot;,&quot;Row6514&quot;,&quot;Row6998&quot;,&quot;Row5665&quot;,&quot;Row6513&quot;,&quot;Row3001&quot;,&quot;Row132&quot;,&quot;Row2157&quot;,&quot;Row3488&quot;,&quot;Row2156&quot;,&quot;Row7840&quot;,&quot;Row3481&quot;,&quot;Row5662&quot;,&quot;Row2153&quot;,&quot;Row3000&quot;,&quot;Row8700&quot;,&quot;Row6524&quot;,&quot;Row2165&quot;,&quot;Row3012&quot;,&quot;Row5677&quot;,&quot;Row2168&quot;,&quot;Row3015&quot;,&quot;Row3499&quot;,&quot;Row5675&quot;,&quot;Row6520&quot;,&quot;Row5673&quot;,&quot;Row147&quot;,&quot;Row5670&quot;,&quot;Row148&quot;,&quot;Row3010&quot;,&quot;Row4340&quot;,&quot;Row5671&quot;,&quot;Row4309&quot;,&quot;Row4307&quot;,&quot;Row4308&quot;,&quot;Row4316&quot;,&quot;Row2136&quot;,&quot;Row3467&quot;,&quot;Row6976&quot;,&quot;Row1285&quot;,&quot;Row2133&quot;,&quot;Row3464&quot;,&quot;Row4312&quot;,&quot;Row3463&quot;,&quot;Row6974&quot;,&quot;Row110&quot;,&quot;Row3466&quot;,&quot;Row111&quot;,&quot;Row2134&quot;,&quot;Row1282&quot;,&quot;Row5640&quot;,&quot;Row3462&quot;,&quot;Row3461&quot;,&quot;Row7828&quot;,&quot;Row2148&quot;,&quot;Row4327&quot;,&quot;Row7835&quot;,&quot;Row1296&quot;,&quot;Row2144&quot;,&quot;Row120&quot;,&quot;Row3474&quot;,&quot;Row5655&quot;,&quot;Row121&quot;,&quot;Row1298&quot;,&quot;Row4321&quot;,&quot;Row1299&quot;,&quot;Row5653&quot;,&quot;Row123&quot;,&quot;Row2140&quot;,&quot;Row1293&quot;,&quot;Row3470&quot;,&quot;Row6981&quot;,&quot;Row125&quot;,&quot;Row1294&quot;,&quot;Row3473&quot;,&quot;Row2108&quot;,&quot;Row1268&quot;,&quot;Row2598&quot;,&quot;Row3445&quot;,&quot;Row4779&quot;,&quot;Row6953&quot;,&quot;Row2113&quot;,&quot;Row3444&quot;,&quot;Row4772&quot;,&quot;Row2112&quot;,&quot;Row2590&quot;,&quot;Row3440&quot;,&quot;Row7808&quot;,&quot;Row181&quot;,&quot;Row3457&quot;,&quot;Row4305&quot;,&quot;Row7815&quot;,&quot;Row7813&quot;,&quot;Row184&quot;,&quot;Row3458&quot;,&quot;Row4304&quot;,&quot;Row6965&quot;,&quot;Row7812&quot;,&quot;Row1274&quot;,&quot;Row3453&quot;,&quot;Row186&quot;,&quot;Row1275&quot;,&quot;Row7810&quot;,&quot;Row187&quot;,&quot;Row2123&quot;,&quot;Row1271&quot;,&quot;Row1272&quot;,&quot;Row1238&quot;,&quot;Row2569&quot;,&quot;Row3416&quot;,&quot;Row5603&quot;,&quot;Row1246&quot;,&quot;Row3423&quot;,&quot;Row3426&quot;,&quot;Row4754&quot;,&quot;Row5601&quot;,&quot;Row6932&quot;,&quot;Row3420&quot;,&quot;Row4752&quot;,&quot;Row1242&quot;,&quot;Row6930&quot;,&quot;Row2575&quot;,&quot;Row2574&quot;,&quot;Row5609&quot;,&quot;Row5608&quot;,&quot;Row4758&quot;,&quot;Row6937&quot;,&quot;Row4759&quot;,&quot;Row2588&quot;,&quot;Row3435&quot;,&quot;Row4767&quot;,&quot;Row1257&quot;,&quot;Row3437&quot;,&quot;Row2105&quot;,&quot;Row4763&quot;,&quot;Row165&quot;,&quot;Row2102&quot;,&quot;Row2586&quot;,&quot;Row2101&quot;,&quot;Row2580&quot;,&quot;Row2548&quot;,&quot;Row3879&quot;,&quot;Row1217&quot;,&quot;Row3878&quot;,&quot;Row1223&quot;,&quot;Row1224&quot;,&quot;Row1225&quot;,&quot;Row3404&quot;,&quot;Row1226&quot;,&quot;Row3403&quot;,&quot;Row3887&quot;,&quot;Row3882&quot;,&quot;Row3881&quot;,&quot;Row2553&quot;,&quot;Row3400&quot;,&quot;Row3883&quot;,&quot;Row3880&quot;,&quot;Row6919&quot;,&quot;Row1227&quot;,&quot;Row4738&quot;,&quot;Row1229&quot;,&quot;Row1234&quot;,&quot;Row3897&quot;,&quot;Row2565&quot;,&quot;Row6923&quot;,&quot;Row2568&quot;,&quot;Row3415&quot;,&quot;Row3898&quot;,&quot;Row3893&quot;,&quot;Row4741&quot;,&quot;Row1231&quot;,&quot;Row3892&quot;,&quot;Row4742&quot;,&quot;Row2525&quot;,&quot;Row3856&quot;,&quot;Row2528&quot;,&quot;Row4703&quot;,&quot;Row2527&quot;,&quot;Row4704&quot;,&quot;Row1201&quot;,&quot;Row3864&quot;,&quot;Row193&quot;,&quot;Row194&quot;,&quot;Row4710&quot;,&quot;Row1688&quot;,&quot;Row4711&quot;,&quot;Row3860&quot;,&quot;Row197&quot;,&quot;Row198&quot;,&quot;Row1200&quot;,&quot;Row1684&quot;,&quot;Row2530&quot;,&quot;Row1205&quot;,&quot;Row4716&quot;,&quot;Row1206&quot;,&quot;Row3867&quot;,&quot;Row3876&quot;,&quot;Row1693&quot;,&quot;Row2542&quot;,&quot;Row2508&quot;,&quot;Row3839&quot;,&quot;Row2507&quot;,&quot;Row1658&quot;,&quot;Row3837&quot;,&quot;Row2997&quot;,&quot;Row3844&quot;,&quot;Row3843&quot;,&quot;Row2991&quot;,&quot;Row1661&quot;,&quot;Row2993&quot;,&quot;Row3840&quot;,&quot;Row8293&quot;,&quot;Row2518&quot;,&quot;Row3849&quot;,&quot;Row2999&quot;,&quot;Row3846&quot;,&quot;Row1668&quot;,&quot;Row2514&quot;,&quot;Row3845&quot;,&quot;Row2517&quot;,&quot;Row3848&quot;,&quot;Row3847&quot;,&quot;Row2522&quot;,&quot;Row3853&quot;,&quot;Row3852&quot;,&quot;Row4702&quot;,&quot;Row3855&quot;,&quot;Row3854&quot;,&quot;Row1670&quot;,&quot;Row1672&quot;,&quot;Row3851&quot;,&quot;Row3850&quot;,&quot;Row6094&quot;,&quot;Row8277&quot;,&quot;Row1638&quot;,&quot;Row1634&quot;,&quot;Row2966&quot;,&quot;Row2965&quot;,&quot;Row3812&quot;,&quot;Row2967&quot;,&quot;Row2974&quot;,&quot;Row3821&quot;,&quot;Row1640&quot;,&quot;Row8287&quot;,&quot;Row2977&quot;,&quot;Row3824&quot;,&quot;Row3823&quot;,&quot;Row2979&quot;,&quot;Row3826&quot;,&quot;Row2984&quot;,&quot;Row3831&quot;,&quot;Row2983&quot;,&quot;Row1654&quot;,&quot;Row2980&quot;,&quot;Row2982&quot;,&quot;Row8282&quot;,&quot;Row8373&quot;,&quot;Row8376&quot;,&quot;Row8379&quot;,&quot;Row1737&quot;,&quot;Row1733&quot;,&quot;Row1740&quot;,&quot;Row6198&quot;,&quot;Row6194&quot;,&quot;Row8371&quot;,&quot;Row936&quot;,&quot;Row1748&quot;,&quot;Row3928&quot;,&quot;Row3925&quot;,&quot;Row1754&quot;,&quot;Row3931&quot;,&quot;Row7059&quot;,&quot;Row7054&quot;,&quot;Row902&quot;,&quot;Row8353&quot;,&quot;Row908&quot;,&quot;Row1715&quot;,&quot;Row1716&quot;,&quot;Row1717&quot;,&quot;Row1718&quot;,&quot;Row1711&quot;,&quot;Row1721&quot;,&quot;Row7028&quot;,&quot;Row7024&quot;,&quot;Row918&quot;,&quot;Row919&quot;,&quot;Row8368&quot;,&quot;Row1726&quot;,&quot;Row1722&quot;,&quot;Row3901&quot;,&quot;Row1723&quot;,&quot;Row3900&quot;,&quot;Row1724&quot;,&quot;Row1730&quot;,&quot;Row7039&quot;,&quot;Row967&quot;,&quot;Row7480&quot;,&quot;Row968&quot;,&quot;Row8334&quot;,&quot;Row8336&quot;,&quot;Row7006&quot;,&quot;Row6156&quot;,&quot;Row972&quot;,&quot;Row7485&quot;,&quot;Row7483&quot;,&quot;Row1708&quot;,&quot;Row8347&quot;,&quot;Row1706&quot;,&quot;Row7017&quot;,&quot;Row6167&quot;,&quot;Row6166&quot;,&quot;Row504&quot;,&quot;Row988&quot;,&quot;Row6161&quot;,&quot;Row5280&quot;,&quot;Row8316&quot;,&quot;Row6139&quot;,&quot;Row5289&quot;,&quot;Row7468&quot;,&quot;Row5288&quot;,&quot;Row5286&quot;,&quot;Row6132&quot;,&quot;Row7463&quot;,&quot;Row5284&quot;,&quot;Row957&quot;,&quot;Row8321&quot;,&quot;Row5298&quot;,&quot;Row6146&quot;,&quot;Row960&quot;,&quot;Row5299&quot;,&quot;Row5297&quot;,&quot;Row965&quot;,&quot;Row8775&quot;,&quot;Row7449&quot;,&quot;Row7447&quot;,&quot;Row7446&quot;,&quot;Row3088&quot;,&quot;Row3087&quot;,&quot;Row3084&quot;,&quot;Row3083&quot;,&quot;Row8780&quot;,&quot;Row8783&quot;,&quot;Row8785&quot;,&quot;Row8302&quot;,&quot;Row7459&quot;,&quot;Row5278&quot;,&quot;Row7455&quot;,&quot;Row7453&quot;,&quot;Row546&quot;,&quot;Row3092&quot;,&quot;Row547&quot;,&quot;Row3095&quot;,&quot;Row8758&quot;,&quot;Row5247&quot;,&quot;Row3067&quot;,&quot;Row4399&quot;,&quot;Row5246&quot;,&quot;Row993&quot;,&quot;Row3063&quot;,&quot;Row3065&quot;,&quot;Row5242&quot;,&quot;Row6571&quot;,&quot;Row997&quot;,&quot;Row7438&quot;,&quot;Row3079&quot;,&quot;Row5259&quot;,&quot;Row6105&quot;,&quot;Row7436&quot;,&quot;Row7435&quot;,&quot;Row5257&quot;,&quot;Row6587&quot;,&quot;Row3075&quot;,&quot;Row5254&quot;,&quot;Row6102&quot;,&quot;Row3074&quot;,&quot;Row6100&quot;,&quot;Row3076&quot;,&quot;Row3071&quot;,&quot;Row5250&quot;,&quot;Row5251&quot;,&quot;Row8736&quot;,&quot;Row7408&quot;,&quot;Row3049&quot;,&quot;Row6559&quot;,&quot;Row7404&quot;,&quot;Row571&quot;,&quot;Row3045&quot;,&quot;Row4379&quot;,&quot;Row6556&quot;,&quot;Row4376&quot;,&quot;Row3042&quot;,&quot;Row2194&quot;,&quot;Row4372&quot;,&quot;Row577&quot;,&quot;Row4371&quot;,&quot;Row3040&quot;,&quot;Row2192&quot;,&quot;Row8740&quot;,&quot;Row8741&quot;,&quot;Row8747&quot;,&quot;Row8749&quot;,&quot;Row7418&quot;,&quot;Row4389&quot;,&quot;Row5236&quot;,&quot;Row6568&quot;,&quot;Row3056&quot;,&quot;Row5237&quot;,&quot;Row4387&quot;,&quot;Row7897&quot;,&quot;Row3053&quot;,&quot;Row102&quot;,&quot;Row3052&quot;,&quot;Row587&quot;,&quot;Row3055&quot;,&quot;Row588&quot;,&quot;Row5231&quot;,&quot;Row4381&quot;,&quot;Row108&quot;,&quot;Row3050&quot;,&quot;Row4380&quot;,&quot;Row549&quot;,&quot;Row3028&quot;,&quot;Row6538&quot;,&quot;Row5205&quot;,&quot;Row3024&quot;,&quot;Row4356&quot;,&quot;Row7864&quot;,&quot;Row2178&quot;,&quot;Row5686&quot;,&quot;Row6532&quot;,&quot;Row3020&quot;,&quot;Row5683&quot;,&quot;Row7862&quot;,&quot;Row4353&quot;,&quot;Row5200&quot;,&quot;Row5684&quot;,&quot;Row2175&quot;,&quot;Row4350&quot;,&quot;Row2174&quot;,&quot;Row5680&quot;,&quot;Row2170&quot;,&quot;Row8720&quot;,&quot;Row8721&quot;,&quot;Row5219&quot;,&quot;Row5216&quot;,&quot;Row7878&quot;,&quot;Row3034&quot;,&quot;Row5215&quot;,&quot;Row5699&quot;,&quot;Row3037&quot;,&quot;Row3036&quot;,&quot;Row4366&quot;,&quot;Row2184&quot;,&quot;Row4363&quot;,&quot;Row5210&quot;,&quot;Row6542&quot;,&quot;Row3030&quot;,&quot;Row7872&quot;,&quot;Row565&quot;,&quot;Row3033&quot;,&quot;Row4362&quot;,&quot;Row2180&quot;,&quot;Row7718&quot;,&quot;Row2037&quot;,&quot;Row3368&quot;,&quot;Row4215&quot;,&quot;Row4216&quot;,&quot;Row2033&quot;,&quot;Row3367&quot;,&quot;Row5542&quot;,&quot;Row4696&quot;,&quot;Row6873&quot;,&quot;Row3361&quot;,&quot;Row3360&quot;,&quot;Row2032&quot;,&quot;Row3363&quot;,&quot;Row1181&quot;,&quot;Row6407&quot;,&quot;Row260&quot;,&quot;Row4227&quot;,&quot;Row6404&quot;,&quot;Row2044&quot;,&quot;Row3375&quot;,&quot;Row3378&quot;,&quot;Row6401&quot;,&quot;Row265&quot;,&quot;Row3377&quot;,&quot;Row5554&quot;,&quot;Row266&quot;,&quot;Row1196&quot;,&quot;Row2042&quot;,&quot;Row3373&quot;,&quot;Row3370&quot;,&quot;Row5519&quot;,&quot;Row6849&quot;,&quot;Row1168&quot;,&quot;Row1169&quot;,&quot;Row2499&quot;,&quot;Row6857&quot;,&quot;Row4678&quot;,&quot;Row2012&quot;,&quot;Row2495&quot;,&quot;Row3342&quot;,&quot;Row1166&quot;,&quot;Row4673&quot;,&quot;Row5520&quot;,&quot;Row2013&quot;,&quot;Row5521&quot;,&quot;Row234&quot;,&quot;Row4672&quot;,&quot;Row1163&quot;,&quot;Row3340&quot;,&quot;Row4670&quot;,&quot;Row3358&quot;,&quot;Row5537&quot;,&quot;Row3357&quot;,&quot;Row4207&quot;,&quot;Row4689&quot;,&quot;Row2022&quot;,&quot;Row4687&quot;,&quot;Row242&quot;,&quot;Row3356&quot;,&quot;Row7710&quot;,&quot;Row243&quot;,&quot;Row4685&quot;,&quot;Row4682&quot;,&quot;Row245&quot;,&quot;Row3352&quot;,&quot;Row1174&quot;,&quot;Row3351&quot;,&quot;Row248&quot;,&quot;Row4648&quot;,&quot;Row6827&quot;,&quot;Row291&quot;,&quot;Row1146&quot;,&quot;Row6836&quot;,&quot;Row6835&quot;,&quot;Row3327&quot;,&quot;Row5986&quot;,&quot;Row6834&quot;,&quot;Row1149&quot;,&quot;Row5984&quot;,&quot;Row296&quot;,&quot;Row1143&quot;,&quot;Row4654&quot;,&quot;Row297&quot;,&quot;Row2476&quot;,&quot;Row4651&quot;,&quot;Row4652&quot;,&quot;Row2472&quot;,&quot;Row3328&quot;,&quot;Row5509&quot;,&quot;Row6838&quot;,&quot;Row5513&quot;,&quot;Row4664&quot;,&quot;Row4662&quot;,&quot;Row6841&quot;,&quot;Row2486&quot;,&quot;Row5510&quot;,&quot;Row1152&quot;,&quot;Row2449&quot;,&quot;Row4628&quot;,&quot;Row3779&quot;,&quot;Row4629&quot;,&quot;Row4627&quot;,&quot;Row4635&quot;,&quot;Row271&quot;,&quot;Row3789&quot;,&quot;Row4633&quot;,&quot;Row5964&quot;,&quot;Row4634&quot;,&quot;Row273&quot;,&quot;Row2452&quot;,&quot;Row6810&quot;,&quot;Row3782&quot;,&quot;Row4632&quot;,&quot;Row275&quot;,&quot;Row3301&quot;,&quot;Row2453&quot;,&quot;Row277&quot;,&quot;Row3780&quot;,&quot;Row4639&quot;,&quot;Row2459&quot;,&quot;Row4637&quot;,&quot;Row280&quot;,&quot;Row6825&quot;,&quot;Row3313&quot;,&quot;Row4647&quot;,&quot;Row5978&quot;,&quot;Row6824&quot;,&quot;Row3316&quot;,&quot;Row4645&quot;,&quot;Row3794&quot;,&quot;Row2462&quot;,&quot;Row4643&quot;,&quot;Row5974&quot;,&quot;Row6820&quot;,&quot;Row3796&quot;,&quot;Row4640&quot;,&quot;Row287&quot;,&quot;Row288&quot;,&quot;Row289&quot;,&quot;Row3792&quot;,&quot;Row4608&quot;,&quot;Row4604&quot;,&quot;Row1586&quot;,&quot;Row1587&quot;,&quot;Row1589&quot;,&quot;Row1583&quot;,&quot;Row3760&quot;,&quot;Row2432&quot;,&quot;Row1585&quot;,&quot;Row3769&quot;,&quot;Row2447&quot;,&quot;Row1116&quot;,&quot;Row1593&quot;,&quot;Row4621&quot;,&quot;Row3770&quot;,&quot;Row8199&quot;,&quot;Row2409&quot;,&quot;Row2408&quot;,&quot;Row2404&quot;,&quot;Row2888&quot;,&quot;Row1559&quot;,&quot;Row2406&quot;,&quot;Row3737&quot;,&quot;Row5914&quot;,&quot;Row1564&quot;,&quot;Row3743&quot;,&quot;Row3742&quot;,&quot;Row3745&quot;,&quot;Row3744&quot;,&quot;Row2892&quot;,&quot;Row2891&quot;,&quot;Row1562&quot;,&quot;Row2894&quot;,&quot;Row3741&quot;,&quot;Row2893&quot;,&quot;Row2890&quot;,&quot;Row3754&quot;,&quot;Row1578&quot;,&quot;Row3755&quot;,&quot;Row3750&quot;,&quot;Row1574&quot;,&quot;Row1570&quot;,&quot;Row8175&quot;,&quot;Row1539&quot;,&quot;Row3719&quot;,&quot;Row1535&quot;,&quot;Row1538&quot;,&quot;Row5900&quot;,&quot;Row2875&quot;,&quot;Row2870&quot;,&quot;Row2872&quot;,&quot;Row1541&quot;,&quot;Row2871&quot;,&quot;Row8172&quot;,&quot;Row8173&quot;,&quot;Row2877&quot;,&quot;Row3724&quot;,&quot;Row2401&quot;,&quot;Row1554&quot;,&quot;Row2400&quot;,&quot;Row2880&quot;,&quot;Row2883&quot;,&quot;Row1552&quot;,&quot;Row1514&quot;,&quot;Row1520&quot;,&quot;Row2854&quot;,&quot;Row8165&quot;,&quot;Row1528&quot;,&quot;Row2857&quot;,&quot;Row3704&quot;,&quot;Row3710&quot;,&quot;Row1532&quot;,&quot;Row1533&quot;,&quot;Row1530&quot;,&quot;Row2948&quot;,&quot;Row1619&quot;,&quot;Row2944&quot;,&quot;Row1614&quot;,&quot;Row2945&quot;,&quot;Row8250&quot;,&quot;Row8262&quot;,&quot;Row1627&quot;,&quot;Row2959&quot;,&quot;Row1628&quot;,&quot;Row2958&quot;,&quot;Row3808&quot;,&quot;Row1623&quot;,&quot;Row3801&quot;,&quot;Row1625&quot;,&quot;Row6089&quot;,&quot;Row7381&quot;,&quot;Row8235&quot;,&quot;Row2922&quot;,&quot;Row2923&quot;,&quot;Row7385&quot;,&quot;Row7383&quot;,&quot;Row7382&quot;,&quot;Row7392&quot;,&quot;Row8243&quot;,&quot;Row1603&quot;,&quot;Row2942&quot;,&quot;Row2941&quot;,&quot;Row6067&quot;,&quot;Row8214&quot;,&quot;Row8216&quot;,&quot;Row2906&quot;,&quot;Row2900&quot;,&quot;Row2902&quot;,&quot;Row6037&quot;,&quot;Row5184&quot;,&quot;Row5185&quot;,&quot;Row5191&quot;,&quot;Row5192&quot;,&quot;Row617&quot;,&quot;Row2917&quot;,&quot;Row2910&quot;,&quot;Row2920&quot;,&quot;Row620&quot;,&quot;Row7376&quot;,&quot;Row621&quot;,&quot;Row6044&quot;,&quot;Row7375&quot;,&quot;Row5195&quot;,&quot;Row5193&quot;,&quot;Row625&quot;,&quot;Row5194&quot;,&quot;Row6490&quot;,&quot;Row7349&quot;,&quot;Row7348&quot;,&quot;Row5168&quot;,&quot;Row5169&quot;,&quot;Row6498&quot;,&quot;Row7343&quot;,&quot;Row6495&quot;,&quot;Row7340&quot;,&quot;Row5170&quot;,&quot;Row8206&quot;,&quot;Row8207&quot;,&quot;Row8208&quot;,&quot;Row8209&quot;,&quot;Row7359&quot;,&quot;Row6026&quot;,&quot;Row6024&quot;,&quot;Row7353&quot;,&quot;Row5173&quot;,&quot;Row4290&quot;,&quot;Row7325&quot;,&quot;Row6477&quot;,&quot;Row7324&quot;,&quot;Row5144&quot;,&quot;Row5145&quot;,&quot;Row653&quot;,&quot;Row5141&quot;,&quot;Row658&quot;,&quot;Row659&quot;,&quot;Row5159&quot;,&quot;Row7338&quot;,&quot;Row5157&quot;,&quot;Row662&quot;,&quot;Row5155&quot;,&quot;Row6487&quot;,&quot;Row663&quot;,&quot;Row5156&quot;,&quot;Row7333&quot;,&quot;Row6001&quot;,&quot;Row5154&quot;,&quot;Row666&quot;,&quot;Row6483&quot;,&quot;Row626&quot;,&quot;Row627&quot;,&quot;Row8633&quot;,&quot;Row5128&quot;,&quot;Row6459&quot;,&quot;Row5125&quot;,&quot;Row6455&quot;,&quot;Row7786&quot;,&quot;Row2096&quot;,&quot;Row7301&quot;,&quot;Row7785&quot;,&quot;Row4276&quot;,&quot;Row7300&quot;,&quot;Row7784&quot;,&quot;Row2098&quot;,&quot;Row4273&quot;,&quot;Row5120&quot;,&quot;Row7783&quot;,&quot;Row4274&quot;,&quot;Row7782&quot;,&quot;Row4271&quot;,&quot;Row4272&quot;,&quot;Row2093&quot;,&quot;Row637&quot;,&quot;Row638&quot;,&quot;Row639&quot;,&quot;Row5139&quot;,&quot;Row6469&quot;,&quot;Row4288&quot;,&quot;Row7798&quot;,&quot;Row640&quot;,&quot;Row7312&quot;,&quot;Row7795&quot;,&quot;Row4284&quot;,&quot;Row647&quot;,&quot;Row5109&quot;,&quot;Row8609&quot;,&quot;Row7769&quot;,&quot;Row7768&quot;,&quot;Row691&quot;,&quot;Row2078&quot;,&quot;Row4257&quot;,&quot;Row7767&quot;,&quot;Row692&quot;,&quot;Row5105&quot;,&quot;Row7766&quot;,&quot;Row7765&quot;,&quot;Row4256&quot;,&quot;Row5103&quot;,&quot;Row7764&quot;,&quot;Row5100&quot;,&quot;Row7763&quot;,&quot;Row4254&quot;,&quot;Row5585&quot;,&quot;Row7762&quot;,&quot;Row697&quot;,&quot;Row4251&quot;,&quot;Row6430&quot;,&quot;Row7761&quot;,&quot;Row5583&quot;,&quot;Row7760&quot;,&quot;Row699&quot;,&quot;Row2070&quot;,&quot;Row5580&quot;,&quot;Row4250&quot;,&quot;Row218&quot;,&quot;Row219&quot;,&quot;Row5118&quot;,&quot;Row7779&quot;,&quot;Row4269&quot;,&quot;Row7777&quot;,&quot;Row4266&quot;,&quot;Row5598&quot;,&quot;Row222&quot;,&quot;Row2085&quot;,&quot;Row5111&quot;,&quot;Row223&quot;,&quot;Row4265&quot;,&quot;Row5112&quot;,&quot;Row7773&quot;,&quot;Row224&quot;,&quot;Row4262&quot;,&quot;Row7772&quot;,&quot;Row225&quot;,&quot;Row2086&quot;,&quot;Row4263&quot;,&quot;Row7771&quot;,&quot;Row226&quot;,&quot;Row4260&quot;,&quot;Row5591&quot;,&quot;Row7770&quot;,&quot;Row4261&quot;,&quot;Row5592&quot;,&quot;Row6408&quot;,&quot;Row7748&quot;,&quot;Row6416&quot;,&quot;Row7747&quot;,&quot;Row5569&quot;,&quot;Row5566&quot;,&quot;Row6413&quot;,&quot;Row2058&quot;,&quot;Row7743&quot;,&quot;Row6411&quot;,&quot;Row6895&quot;,&quot;Row673&quot;,&quot;Row5562&quot;,&quot;Row3382&quot;,&quot;Row5563&quot;,&quot;Row675&quot;,&quot;Row2054&quot;,&quot;Row3385&quot;,&quot;Row2053&quot;,&quot;Row678&quot;,&quot;Row679&quot;,&quot;Row3381&quot;,&quot;Row8604&quot;,&quot;Row7759&quot;,&quot;Row6426&quot;,&quot;Row680&quot;,&quot;Row681&quot;,&quot;Row2066&quot;,&quot;Row5578&quot;,&quot;Row682&quot;,&quot;Row5575&quot;,&quot;Row2068&quot;,&quot;Row2063&quot;,&quot;Row3393&quot;,&quot;Row6420&quot;],&quot;Row8&quot;:[&quot;Row390&quot;,&quot;Row2203&quot;,&quot;Row6549&quot;,&quot;Row1622&quot;,&quot;Row1759&quot;,&quot;Row5908&quot;,&quot;Row6806&quot;],&quot;Row9&quot;:[&quot;Row8174&quot;,&quot;Row8189&quot;,&quot;Row8710&quot;,&quot;Row2947&quot;,&quot;Row2009&quot;,&quot;Row1933&quot;,&quot;Row6506&quot;,&quot;Row2994&quot;,&quot;Row3247&quot;,&quot;Row3943&quot;,&quot;Row6603&quot;,&quot;Row7756&quot;,&quot;Row4311&quot;,&quot;Row7896&quot;,&quot;Row5287&quot;,&quot;Row5054&quot;,&quot;Row525&quot;],&quot;Row6&quot;:[&quot;Row5180&quot;,&quot;Row82&quot;,&quot;Row8378&quot;,&quot;Row65&quot;,&quot;Row4747&quot;,&quot;Row3369&quot;,&quot;Row2173&quot;,&quot;Row5221&quot;,&quot;Row2073&quot;,&quot;Row2293&quot;,&quot;Row5165&quot;,&quot;Row677&quot;,&quot;Row5063&quot;,&quot;Row338&quot;,&quot;Row537&quot;,&quot;Row2390&quot;,&quot;Row2718&quot;,&quot;Row2515&quot;,&quot;Row55&quot;,&quot;Row3108&quot;,&quot;Row1059&quot;,&quot;Row2523&quot;,&quot;Row7856&quot;,&quot;Row2740&quot;,&quot;Row3653&quot;,&quot;Row6742&quot;,&quot;Row6885&quot;,&quot;Row1750&quot;,&quot;Row5035&quot;,&quot;Row1173&quot;,&quot;Row4084&quot;,&quot;Row667&quot;,&quot;Row789&quot;],&quot;Row7&quot;:[&quot;Row3927&quot;,&quot;Row1639&quot;,&quot;Row8557&quot;,&quot;Row7709&quot;,&quot;Row1779&quot;,&quot;Row1878&quot;,&quot;Row4946&quot;,&quot;Row2599&quot;,&quot;Row7628&quot;,&quot;Row380&quot;,&quot;Row6505&quot;,&quot;Row4413&quot;,&quot;Row1043&quot;,&quot;Row1362&quot;,&quot;Row274&quot;,&quot;Row7953&quot;,&quot;Row1980&quot;,&quot;Row5245&quot;,&quot;Row7368&quot;,&quot;Row5650&quot;,&quot;Row323&quot;,&quot;Row5274&quot;,&quot;Row526&quot;],&quot;Row4&quot;:[&quot;Row3886&quot;,&quot;Row6955&quot;,&quot;Row3601&quot;,&quot;Row5940&quot;,&quot;Row5421&quot;,&quot;Row7721&quot;,&quot;Row254&quot;,&quot;Row3168&quot;,&quot;Row2470&quot;,&quot;Row336&quot;,&quot;Row72&quot;,&quot;Row8422&quot;,&quot;Row3608&quot;,&quot;Row1427&quot;,&quot;Row6519&quot;,&quot;Row7729&quot;,&quot;Row2962&quot;,&quot;Row4504&quot;,&quot;Row2600&quot;,&quot;Row3452&quot;,&quot;Row2124&quot;,&quot;Row2201&quot;,&quot;Row3774&quot;,&quot;Row5674&quot;,&quot;Row6126&quot;,&quot;Row4264&quot;,&quot;Row544&quot;,&quot;Row106&quot;,&quot;Row425&quot;,&quot;Row2160&quot;,&quot;Row669&quot;,&quot;Row109&quot;,&quot;Row8311&quot;,&quot;Row4709&quot;,&quot;Row2405&quot;,&quot;Row2526&quot;,&quot;Row21&quot;,&quot;Row1245&quot;,&quot;Row5923&quot;,&quot;Row272&quot;,&quot;Row5320&quot;,&quot;Row6970&quot;,&quot;Row631&quot;,&quot;Row5363&quot;,&quot;Row7342&quot;,&quot;Row6174&quot;,&quot;Row514&quot;,&quot;Row6250&quot;,&quot;Row5090&quot;,&quot;Row1408&quot;,&quot;Row2658&quot;,&quot;Row8726&quot;,&quot;Row1922&quot;,&quot;Row3749&quot;,&quot;Row1851&quot;,&quot;Row2422&quot;,&quot;Row4845&quot;,&quot;Row5138&quot;,&quot;Row6941&quot;,&quot;Row3477&quot;,&quot;Row521&quot;,&quot;Row2021&quot;,&quot;Row4163&quot;,&quot;Row7870&quot;,&quot;Row5096&quot;],&quot;Row5&quot;:[&quot;Row2826&quot;,&quot;Row4218&quot;,&quot;Row2953&quot;,&quot;Row7725&quot;,&quot;Row1864&quot;,&quot;Row5305&quot;,&quot;Row1065&quot;,&quot;Row6996&quot;,&quot;Row3246&quot;,&quot;Row1182&quot;,&quot;Row2151&quot;,&quot;Row2152&quot;,&quot;Row3483&quot;,&quot;Row7287&quot;,&quot;Row8022&quot;,&quot;Row1989&quot;,&quot;Row382&quot;,&quot;Row6766&quot;,&quot;Row385&quot;,&quot;Row2162&quot;,&quot;Row820&quot;,&quot;Row3491&quot;,&quot;Row7295&quot;,&quot;Row8357&quot;,&quot;Row8599&quot;,&quot;Row6969&quot;,&quot;Row1048&quot;,&quot;Row590&quot;,&quot;Row1841&quot;,&quot;Row4677&quot;,&quot;Row4436&quot;,&quot;Row5888&quot;,&quot;Row4676&quot;,&quot;Row3345&quot;,&quot;Row4310&quot;,&quot;Row232&quot;,&quot;Row6971&quot;,&quot;Row7266&quot;,&quot;Row8125&quot;,&quot;Row361&quot;,&quot;Row241&quot;,&quot;Row124&quot;,&quot;Row366&quot;,&quot;Row488&quot;,&quot;Row5097&quot;,&quot;Row921&quot;,&quot;Row848&quot;,&quot;Row1813&quot;,&quot;Row3325&quot;,&quot;Row1384&quot;,&quot;Row2473&quot;,&quot;Row3685&quot;,&quot;Row3680&quot;,&quot;Row3561&quot;,&quot;Row855&quot;,&quot;Row8349&quot;,&quot;Row5869&quot;,&quot;Row7806&quot;,&quot;Row1952&quot;,&quot;Row3455&quot;,&quot;Row4663&quot;,&quot;Row1270&quot;,&quot;Row7254&quot;,&quot;Row703&quot;,&quot;Row1918&quot;,&quot;Row709&quot;,&quot;Row8797&quot;,&quot;Row3659&quot;,&quot;Row2327&quot;,&quot;Row3540&quot;,&quot;Row154&quot;,&quot;Row4750&quot;,&quot;Row6137&quot;,&quot;Row5166&quot;,&quot;Row2450&quot;,&quot;Row830&quot;,&quot;Row95&quot;,&quot;Row1928&quot;,&quot;Row8684&quot;,&quot;Row2218&quot;,&quot;Row3669&quot;,&quot;Row7906&quot;,&quot;Row1014&quot;,&quot;Row2106&quot;,&quot;Row3310&quot;,&quot;Row2585&quot;,&quot;Row3553&quot;,&quot;Row843&quot;,&quot;Row1579&quot;,&quot;Row2426&quot;,&quot;Row2676&quot;,&quot;Row3644&quot;,&quot;Row4852&quot;,&quot;Row3884&quot;,&quot;Row39&quot;,&quot;Row3762&quot;,&quot;Row532&quot;,&quot;Row5263&quot;,&quot;Row533&quot;,&quot;Row3082&quot;,&quot;Row536&quot;,&quot;Row8424&quot;,&quot;Row5829&quot;,&quot;Row6917&quot;,&quot;Row32&quot;,&quot;Row3654&quot;,&quot;Row3778&quot;,&quot;Row4623&quot;,&quot;Row4865&quot;,&quot;Row6368&quot;,&quot;Row1596&quot;,&quot;Row7576&quot;,&quot;Row785&quot;,&quot;Row5395&quot;,&quot;Row7574&quot;,&quot;Row545&quot;,&quot;Row4183&quot;,&quot;Row4063&quot;,&quot;Row668&quot;,&quot;Row5150&quot;,&quot;Row509&quot;,&quot;Row8510&quot;,&quot;Row8755&quot;,&quot;Row2767&quot;,&quot;Row2648&quot;,&quot;Row5922&quot;,&quot;Row1440&quot;,&quot;Row6213&quot;,&quot;Row513&quot;,&quot;Row1448&quot;,&quot;Row4717&quot;,&quot;Row5812&quot;,&quot;Row5933&quot;,&quot;Row1213&quot;,&quot;Row1335&quot;,&quot;Row2546&quot;,&quot;Row7679&quot;,&quot;Row880&quot;,&quot;Row1573&quot;,&quot;Row3752&quot;,&quot;Row6586&quot;,&quot;Row5494&quot;,&quot;Row522&quot;,&quot;Row523&quot;,&quot;Row2746&quot;,&quot;Row3835&quot;,&quot;Row3600&quot;,&quot;Row6318&quot;,&quot;Row7528&quot;,&quot;Row3965&quot;,&quot;Row1782&quot;,&quot;Row3047&quot;,&quot;Row4495&quot;,&quot;Row213&quot;,&quot;Row6671&quot;,&quot;Row3282&quot;,&quot;Row2519&quot;,&quot;Row1667&quot;,&quot;Row3725&quot;,&quot;Row1306&quot;,&quot;Row2524&quot;,&quot;Row4028&quot;,&quot;Row4942&quot;,&quot;Row2089&quot;,&quot;Row3970&quot;,&quot;Row5593&quot;,&quot;Row7892&quot;,&quot;Row5470&quot;,&quot;Row3293&quot;,&quot;Row309&quot;,&quot;Row1755&quot;,&quot;Row3936&quot;,&quot;Row3148&quot;,&quot;Row1402&quot;,&quot;Row3942&quot;,&quot;Row5206&quot;,&quot;Row4114&quot;,&quot;Row5567&quot;,&quot;Row795&quot;,&quot;Row6890&quot;,&quot;Row8030&quot;,&quot;Row2739&quot;,&quot;Row3708&quot;,&quot;Row1404&quot;,&quot;Row2855&quot;,&quot;Row3702&quot;,&quot;Row8605&quot;,&quot;Row2736&quot;,&quot;Row1895&quot;,&quot;Row5459&quot;,&quot;Row6304&quot;,&quot;Row440&quot;,&quot;Row4365&quot;,&quot;Row2189&quot;,&quot;Row4122&quot;,&quot;Row4485&quot;,&quot;Row324&quot;,&quot;Row2064&quot;,&quot;Row5690&quot;],&quot;Row2&quot;:[&quot;Row6504&quot;,&quot;Row3541&quot;,&quot;Row8442&quot;,&quot;Row8&quot;,&quot;Row1480&quot;,&quot;Row67&quot;,&quot;Row1701&quot;,&quot;Row1998&quot;,&quot;Row5803&quot;],&quot;Row3&quot;:[&quot;Row8331&quot;,&quot;Row8653&quot;,&quot;Row1419&quot;,&quot;Row2628&quot;,&quot;Row1618&quot;,&quot;Row5939&quot;,&quot;Row89&quot;,&quot;Row8539&quot;,&quot;Row4527&quot;,&quot;Row1302&quot;,&quot;Row7406&quot;,&quot;Row3920&quot;,&quot;Row890&quot;,&quot;Row1781&quot;,&quot;Row5149&quot;,&quot;Row2399&quot;,&quot;Row7842&quot;,&quot;Row4498&quot;,&quot;Row5147&quot;,&quot;Row5785&quot;,&quot;Row6279&quot;,&quot;Row2395&quot;,&quot;Row7321&quot;,&quot;Row2790&quot;,&quot;Row5262&quot;,&quot;Row5380&quot;,&quot;Row5381&quot;,&quot;Row8064&quot;,&quot;Row8541&quot;,&quot;Row1308&quot;,&quot;Row1948&quot;,&quot;Row1949&quot;,&quot;Row4857&quot;,&quot;Row6803&quot;,&quot;Row1158&quot;,&quot;Row1235&quot;,&quot;Row2127&quot;,&quot;Row1395&quot;,&quot;Row1791&quot;,&quot;Row1473&quot;,&quot;Row220&quot;,&quot;Row660&quot;,&quot;Row386&quot;,&quot;Row540&quot;,&quot;Row661&quot;,&quot;Row1590&quot;,&quot;Row3011&quot;,&quot;Row3330&quot;,&quot;Row628&quot;,&quot;Row1958&quot;,&quot;Row2846&quot;,&quot;Row6935&quot;,&quot;Row391&quot;,&quot;Row1401&quot;,&quot;Row1687&quot;,&quot;Row2931&quot;,&quot;Row1765&quot;,&quot;Row7867&quot;,&quot;Row2254&quot;,&quot;Row5126&quot;,&quot;Row5523&quot;,&quot;Row2135&quot;,&quot;Row4551&quot;,&quot;Row5244&quot;,&quot;Row477&quot;,&quot;Row5285&quot;,&quot;Row676&quot;,&quot;Row512&quot;,&quot;Row1081&quot;,&quot;Row8002&quot;,&quot;Row1929&quot;,&quot;Row1847&quot;,&quot;Row15&quot;,&quot;Row1848&quot;,&quot;Row4837&quot;,&quot;Row1569&quot;,&quot;Row2415&quot;,&quot;Row2417&quot;,&quot;Row1179&quot;,&quot;Row1377&quot;,&quot;Row4206&quot;,&quot;Row4844&quot;,&quot;Row160&quot;,&quot;Row2466&quot;,&quot;Row1698&quot;,&quot;Row3035&quot;,&quot;Row2583&quot;,&quot;Row2069&quot;,&quot;Row2388&quot;,&quot;Row4167&quot;,&quot;Row4201&quot;,&quot;Row4762&quot;,&quot;Row684&quot;,&quot;Row6264&quot;,&quot;Row3192&quot;]},&quot;forward&quot;:false}}"/>
        </config>
        <config key="inObject_1">
            <entry key="jsonValue" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <entry key="warnMessage" type="xstring" value=""/>
    <entry key="errorMessage" type="xstring" value=""/>
</config>
